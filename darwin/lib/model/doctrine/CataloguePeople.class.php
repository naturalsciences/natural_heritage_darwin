<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CataloguePeople extends BaseCataloguePeople
{
  private static $auth_type = array('Main Author' => 'Main Author',
                     'Secondary Author' => 'Secondary Author',
	                   'Reviewer'=> 'Reviewer',
	                   'Publisher' => 'Publisher', 
	                   'Corrector' => 'Corrector', 
	                   'Related' => 'Related');
	                   
  // array of actors roles in loans module, 
  //we use the key to have a number representing witch role someone have or not
  private static $actor_role = array(
    2 => 'Responsible',
    4 => 'Contact',
    8 => 'Checker',
    16 => 'Preparator',
    32 => 'Attendant',
    64 => 'Transporter',
    128 => 'Other'
  ) ;
  
  public static function getTypes()
  {
    try{
        $i18n_object = sfContext::getInstance()->getI18n();
    }
    catch( Exception $e )
    {
        return self::$actor_role;
    }
    return array_map(array($i18n_object, '__'), self::$actor_role);
  } 
  
  public static function getAuthorTypes()
  {
    try{
        $i18n_object = sfContext::getInstance()->getI18n();
    }
    catch( Exception $e )
    {
        return self::$auth_type;
    }
    return array_map(array($i18n_object, '__'), self::$auth_type);
  }  
  
  public function setPeopleSubType($db_types)
  {
    $result = 0;
    $types = self::getTypes();
    if(is_array($db_types))
    {
      foreach($db_types as $value)
      {
        if(isset($types[$value]))
        $result += $value;
      }
      $this->_set('people_sub_type', $result);
    }
    else
      $this->_set('people_sub_type', $db_types);
  } 
  
  public function getPeopleSubType()
  {
    $result = array();
    // people_sub_type in loans is a binary witch allow multirole, see $actor_role for each possible roles
    if($this->_get('referenced_relation') != "loans")
      return ($this->_get('people_sub_type')) ;    
    foreach(self::getTypes() as $k => $value)
    {
      if($k & $this->_get('people_sub_type'))
      {
        $result[] = $k;
      }
    }
    return $result;
  }

  public function getIsARole($role_name)
  {
    //Find role id
    $role_key = array_search($role_name, self::$actor_role);
    $roles = $this->getPeopleSubType();
    //Find if role id is set for this people
    $role_found = array_search($role_key, $roles);
    return $role_found !== false;
  }
}
