<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Gtu extends BaseGtu
{
  public function getGtuFromDateMasked ()
  {
    $dateTime = new FuzzyDateTime($this->_get('gtu_from_date'), $this->_get('gtu_from_date_mask'),true, true);
    return $dateTime->getDateMasked();
  }
  
  public function getGtuToDateMasked ()
  {
    $dateTime = new FuzzyDateTime($this->_get('gtu_to_date'), $this->_get('gtu_to_date_mask'),false, true);
    return $dateTime->getDateMasked();
  }
  
  public function getGtuFromDate()
  {
    $from_date = new FuzzyDateTime($this->_get('gtu_from_date'), $this->_get('gtu_from_date_mask'),true,true);
    return $from_date->getDateTimeMaskedAsArray();
  }

  public function getGtuToDate()
  {
    $to_date = new FuzzyDateTime($this->_get('gtu_to_date'), $this->_get('gtu_to_date_mask'), false,true);
    return $to_date->getDateTimeMaskedAsArray();
  }

  public function setGtuFromDate($fd)
  {
    if ($fd instanceof FuzzyDateTime)
    {
      $this->_set('gtu_from_date', $fd->format('Y/m/d H:i:s'));
      $this->_set('gtu_from_date_mask', $fd->getMask());
    }
    else
    {
      $dateTime = new FuzzyDateTime($fd, 56, true,true);
      if(is_array($fd))
        $dateTime->setMask(FuzzyDateTime::getMaskFromDate($fd));
      $this->_set('gtu_from_date', $dateTime->format('Y/m/d H:i:s'));
      $this->_set('gtu_from_date_mask', $dateTime->getMask());
    }
  }

  public function setGtuToDate($fd)
  {
    if ($fd instanceof FuzzyDateTime)
    {
      $this->_set('gtu_to_date', $fd->format('Y/m/d H:i:s'));
      $this->_set('gtu_to_date_mask', $fd->getMask());
    }
    else
    {
      $dateTime = new FuzzyDateTime($fd, 56, false,true);
      if(is_array($fd))
        $dateTime->setMask(FuzzyDateTime::getMaskFromDate($fd));
      $this->_set('gtu_to_date', $dateTime->format('Y/m/d H:i:s'));
      $this->_set('gtu_to_date_mask', $dateTime->getMask());
    }
  }

  public function getName($view = null, $countriesOnly = false)
  {
    if($this->_get('id')==0) return '-';
    $nbr = count($this->TagGroups);
    if(! $nbr) return "No Tags";
    $str = '<ul  class="search_tags">';
    foreach($this->TagGroups as $group)
    {
      if(!$countriesOnly || ($countriesOnly && $group->getSubGroupName()=='country')) {
        $str .= '<li><label>'.$group->getSubGroupName().'<span class="gtu_group"> - '.TagGroups::getGroup($group->getGroupName()).'</span></label><ul class="name_tags'.($view!=null?"_view":"").'">';
        $tags = explode(";",$group->getTagValue());
        foreach($tags as $value)
          if (strlen($value))
            $str .=  '<li>' . trim($value).'</li>';
        $str .= '</ul><div class="clear"></div>';
        if($countriesOnly)
          break;
      }
    }
    $str .= '</ul>';
    return $str;
  }

  public function getMap()
  {
    if( $this->getLatitude() != '' && $this->getLongitude()!= '')
      return '<img class="gtu_img_loc" src="http://staticmap.openstreetmap.de/staticmap.php?&size=480x240&center='.$this->getLatitude().','.$this->getLongitude().'&zoom=6&markers='.$this->getLatitude().','.$this->getLongitude().',red-pushpin" alt="Sampling location" />';
    return '';
  }
  
  //ftheeten 2018 06 04
  public function getMapOpenLayers3()
  {
	  if( $this->getLatitude() != '' && $this->getLongitude()!= '')
	  {
		return '<style >
			p.collapse{
				display:none;
			}
			</style>
			<div id="map_container_nh_'.$this->getId().'" class="map_container_nh">
			<div  style="width:500px;height:400px;" id="map_'.$this->getId().'" class="map_'.$this->getId().'"></div>
				<div id="mouse-position_'.$this->getId().'"></div>
			</div>
			<!--jmherpers 2018 09 07-->
			<select id="layer-select">
			   <option value="Aerial">Aerial</option>
			   <option value="AerialWithLabels" selected>Aerial with labels</option>
			   <option value="Road">Road (static)</option>
			   <option value="RoadOnDemand">Road (dynamic)</option>
			</select>
			 <script type="text/javascript">
				var map;
				//var bingBackground;
				var view;
				var mousePositionControl;
				var scaleLineControl;
				mousePositionControl= new ol.control.MousePosition({
				     coordinateFormat: ol.coordinate.createStringXY(4),
					projection:"EPSG:4326",
					className: "custom-mouse-position",
					target: document.getElementById("mouse-position_'.$this->getId().'"),
					undefinedHTML: "&nbsp;"
				});
				scaleLineControl = new ol.control.ScaleLine();
				/*bingBackground= new ol.layer.Tile({
					preload: Infinity,
					source: new ol.source.BingMaps({key:"Ap9VNKmWsntrnteCapydhid0fZxzbV_9pBTjok2rQZS4pi15zfBbIkJkvrZSuVnJ",  imagerySet:"AerialWithLabels" })
				});*/
				view= new ol.View({
					center: [-4,15],
					zoom: 5
				});
						
				var geometry=new ol.geom.Point(['.$this->getLongitude().','.$this->getLatitude().']);
				var style= new ol.style.Style({
					image: new ol.style.Circle({
						radius: 10,
						stroke: new ol.style.Stroke({
							color: "#fff"}),
						fill: new ol.style.Fill({
							color: "#3399CC"})
					}),
					text: new ol.style.Text({
						text: "1",
						fill: new ol.style.Fill({
							color: "#fff"
						})
					})
				});
					   
				 var iconFeature = new ol.Feature({
					 label:"1",
					geometry: geometry.transform("EPSG:4326", "EPSG:3857")
				});
							
				var vectorSource = new ol.source.Vector({
					features: [iconFeature]
				});

				var vectorLayer = new ol.layer.Vector({
					source: vectorSource,
					style: style
				});
				
				//JMHerpers 2018 09 07 add other background maps
				var styles = [
					"Road",
					"RoadOnDemand",
					"Aerial",
					"AerialWithLabels"
				  ];
				var layers = [];
				var i, ii;
				for (i = 0, ii = styles.length; i < ii; ++i) {
					layers.push(new ol.layer.Tile({
					  visible: false,
					  preload: Infinity,
					  source: new ol.source.BingMaps({
						key: "Ap9VNKmWsntrnteCapydhid0fZxzbV_9pBTjok2rQZS4pi15zfBbIkJkvrZSuVnJ",
						imagerySet: styles[i]
						// use maxZoom 19 to see stretched tiles instead of the BingMaps
						// "no photos at this zoom level" tiles
						// maxZoom: 19
					  })
					}));
				}
	  
				layers [styles.length] = vectorLayer;
		
				map=new ol.Map({
					layers: layers,     //[bingBackground,vectorLayer],
					target: "map_'.$this->getId().'",
					view: view,
					controls: ol.control.defaults({
						attributionOptions: ({collapsible: false})
					}).extend([mousePositionControl, scaleLineControl ])
				});
							 
				var extent = vectorLayer.getSource().getExtent();
				map.getView().fit(extent);
				map.getView().setZoom(11);
												
				//JMHerpers 2018 09 07 change map background
				var select = document.getElementById("layer-select");
				function onChange() {
					var style = select.value;
					for (var i = 0, ii = layers.length; i < ii; ++i) {
					  layers[i].setVisible(styles[i] === style);
					}
				}
				select.addEventListener("change", onChange);
				onChange();
				////////////
			</script>';
		}
    return '';
  }

  
  public function getTagsWithCode($view = null)
  {
    $str = $this->getName($view);
    //if($this->getLongitude() != '')
     // $str .= '<b class="img">'.$this->getMap().'</b>';
    $str .=  '<b class="code">'.$this->getCode().'</b>';
    $str .=  '<b class="lat">'.$this->getLatitude().'</b>';
    $str .=  '<b class="lon">'.$this->getLongitude().'</b>';
    $str .=  '<b class="date_from">'.$this->getGtuFromDateMasked().'</b>';
    $str .=  '<b class="date_to">'.$this->getGtuToDateMasked().'</b>';

    return $str;
  }

  public function getCode()
  {
    if(! $this->isNew() && $this->_get('id')==0)
      return '-';
    return $this->_get('code');
  }

  public function hasCountries()
  {
    $q = Doctrine_Query::create()
         ->from('TagGroups tg')
         ->where('tg.gtu_ref = ? and tg.sub_group_name_indexed = ?', array($this->_get('id'), 'country'));
    return (count($q->execute()));
  }
}
