<?php

/**
 * BaseStagingCodes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $import_ref
 * @property string $specimen_main_id
 * @property string $specimen_uuid
 * @property integer $specimen_ref
 * @property string $code_category
 * @property string $code_prefix
 * @property string $code_prefix_separator
 * @property string $code
 * @property string $code_suffix
 * @property string $code_suffix_separator
 * @property integer $code_date_mask
 * @property string $status
 * @property boolean $to_import
 * @property boolean $imported
 * @property Imports $Import
 * @property Specimens $Specimen
 * 
 * @method integer      getId()                    Returns the current record's "id" value
 * @method integer      getImportRef()             Returns the current record's "import_ref" value
 * @method string       getSpecimenMainId()        Returns the current record's "specimen_main_id" value
 * @method string       getSpecimenUuid()          Returns the current record's "specimen_uuid" value
 * @method integer      getSpecimenRef()           Returns the current record's "specimen_ref" value
 * @method string       getCodeCategory()          Returns the current record's "code_category" value
 * @method string       getCodePrefix()            Returns the current record's "code_prefix" value
 * @method string       getCodePrefixSeparator()   Returns the current record's "code_prefix_separator" value
 * @method string       getCode()                  Returns the current record's "code" value
 * @method string       getCodeSuffix()            Returns the current record's "code_suffix" value
 * @method string       getCodeSuffixSeparator()   Returns the current record's "code_suffix_separator" value
 * @method integer      getCodeDateMask()          Returns the current record's "code_date_mask" value
 * @method string       getStatus()                Returns the current record's "status" value
 * @method boolean      getToImport()              Returns the current record's "to_import" value
 * @method boolean      getImported()              Returns the current record's "imported" value
 * @method Imports      getImport()                Returns the current record's "Import" value
 * @method Specimens    getSpecimen()              Returns the current record's "Specimen" value
 * @method StagingCodes setId()                    Sets the current record's "id" value
 * @method StagingCodes setImportRef()             Sets the current record's "import_ref" value
 * @method StagingCodes setSpecimenMainId()        Sets the current record's "specimen_main_id" value
 * @method StagingCodes setSpecimenUuid()          Sets the current record's "specimen_uuid" value
 * @method StagingCodes setSpecimenRef()           Sets the current record's "specimen_ref" value
 * @method StagingCodes setCodeCategory()          Sets the current record's "code_category" value
 * @method StagingCodes setCodePrefix()            Sets the current record's "code_prefix" value
 * @method StagingCodes setCodePrefixSeparator()   Sets the current record's "code_prefix_separator" value
 * @method StagingCodes setCode()                  Sets the current record's "code" value
 * @method StagingCodes setCodeSuffix()            Sets the current record's "code_suffix" value
 * @method StagingCodes setCodeSuffixSeparator()   Sets the current record's "code_suffix_separator" value
 * @method StagingCodes setCodeDateMask()          Sets the current record's "code_date_mask" value
 * @method StagingCodes setStatus()                Sets the current record's "status" value
 * @method StagingCodes setToImport()              Sets the current record's "to_import" value
 * @method StagingCodes setImported()              Sets the current record's "imported" value
 * @method StagingCodes setImport()                Sets the current record's "Import" value
 * @method StagingCodes setSpecimen()              Sets the current record's "Specimen" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStagingCodes extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('staging_codes');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('import_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('specimen_main_id', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('specimen_uuid', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('specimen_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('code_category', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'main',
             ));
        $this->hasColumn('code_prefix', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('code_prefix_separator', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('code', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('code_suffix', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('code_suffix_separator', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('code_date_mask', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('status', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('to_import', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('imported', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Imports as Import', array(
             'local' => 'import_ref',
             'foreign' => 'id'));

        $this->hasOne('Specimens as Specimen', array(
             'local' => 'specimen_ref',
             'foreign' => 'id'));
    }
}