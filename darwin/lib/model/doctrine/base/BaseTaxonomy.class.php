<?php

/**
 * BaseTaxonomy
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $name_indexed
 * @property integer $level_ref
 * @property string $status
 * @property string $path
 * @property integer $parent_ref
 * @property boolean $extinct
 * @property boolean $is_reference_taxonomy
 * @property integer $metadata_ref
 * @property boolean $sensitive_info_withheld
 * @property boolean $cites
 * @property Taxonomy $Parent
 * @property CatalogueLevels $Level
 * @property TaxonomyMetadata $TaxonomyMetadata
 * @property Doctrine_Collection $Taxonomy
 * @property Doctrine_Collection $Specimens
 * @property Doctrine_Collection $SpecimensRelationships
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method string              getName()                    Returns the current record's "name" value
 * @method string              getNameIndexed()             Returns the current record's "name_indexed" value
 * @method integer             getLevelRef()                Returns the current record's "level_ref" value
 * @method string              getStatus()                  Returns the current record's "status" value
 * @method string              getPath()                    Returns the current record's "path" value
 * @method integer             getParentRef()               Returns the current record's "parent_ref" value
 * @method boolean             getExtinct()                 Returns the current record's "extinct" value
 * @method boolean             getIsReferenceTaxonomy()     Returns the current record's "is_reference_taxonomy" value
 * @method integer             getMetadataRef()             Returns the current record's "metadata_ref" value
 * @method boolean             getSensitiveInfoWithheld()   Returns the current record's "sensitive_info_withheld" value
 * @method boolean             getCites()                   Returns the current record's "cites" value
 * @method Taxonomy            getParent()                  Returns the current record's "Parent" value
 * @method CatalogueLevels     getLevel()                   Returns the current record's "Level" value
 * @method TaxonomyMetadata    getTaxonomyMetadata()        Returns the current record's "TaxonomyMetadata" value
 * @method Doctrine_Collection getTaxonomy()                Returns the current record's "Taxonomy" collection
 * @method Doctrine_Collection getSpecimens()               Returns the current record's "Specimens" collection
 * @method Doctrine_Collection getSpecimensRelationships()  Returns the current record's "SpecimensRelationships" collection
 * @method Taxonomy            setId()                      Sets the current record's "id" value
 * @method Taxonomy            setName()                    Sets the current record's "name" value
 * @method Taxonomy            setNameIndexed()             Sets the current record's "name_indexed" value
 * @method Taxonomy            setLevelRef()                Sets the current record's "level_ref" value
 * @method Taxonomy            setStatus()                  Sets the current record's "status" value
 * @method Taxonomy            setPath()                    Sets the current record's "path" value
 * @method Taxonomy            setParentRef()               Sets the current record's "parent_ref" value
 * @method Taxonomy            setExtinct()                 Sets the current record's "extinct" value
 * @method Taxonomy            setIsReferenceTaxonomy()     Sets the current record's "is_reference_taxonomy" value
 * @method Taxonomy            setMetadataRef()             Sets the current record's "metadata_ref" value
 * @method Taxonomy            setSensitiveInfoWithheld()   Sets the current record's "sensitive_info_withheld" value
 * @method Taxonomy            setCites()                   Sets the current record's "cites" value
 * @method Taxonomy            setParent()                  Sets the current record's "Parent" value
 * @method Taxonomy            setLevel()                   Sets the current record's "Level" value
 * @method Taxonomy            setTaxonomyMetadata()        Sets the current record's "TaxonomyMetadata" value
 * @method Taxonomy            setTaxonomy()                Sets the current record's "Taxonomy" collection
 * @method Taxonomy            setSpecimens()               Sets the current record's "Specimens" collection
 * @method Taxonomy            setSpecimensRelationships()  Sets the current record's "SpecimensRelationships" collection
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTaxonomy extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('taxonomy');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('name_indexed', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('level_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'valid',
             ));
        $this->hasColumn('path', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'default' => '/',
             ));
        $this->hasColumn('parent_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('extinct', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('is_reference_taxonomy', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('metadata_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('sensitive_info_withheld', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('cites', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Taxonomy as Parent', array(
             'local' => 'parent_ref',
             'foreign' => 'id'));

        $this->hasOne('CatalogueLevels as Level', array(
             'local' => 'level_ref',
             'foreign' => 'id'));

        $this->hasOne('TaxonomyMetadata', array(
             'local' => 'metadata_ref',
             'foreign' => 'id'));

        $this->hasMany('Taxonomy', array(
             'local' => 'id',
             'foreign' => 'parent_ref'));

        $this->hasMany('Specimens', array(
             'local' => 'id',
             'foreign' => 'taxon_ref'));

        $this->hasMany('SpecimensRelationships', array(
             'local' => 'id',
             'foreign' => 'taxon_ref'));
    }
}