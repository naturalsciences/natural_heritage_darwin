<?php

/**
 * BaseWidgetProfilesDefinition
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $profile_ref
 * @property string $category
 * @property string $group_name
 * @property integer $order_by
 * @property integer $col_num
 * @property boolean $mandatory
 * @property boolean $visible
 * @property boolean $opened
 * @property string $color
 * @property boolean $is_available
 * @property integer $icon_ref
 * @property string $title_perso
 * @property boolean $all_public
 * @property WidgetProfiles $WidgetProfiles
 * 
 * @method integer                  getId()             Returns the current record's "id" value
 * @method integer                  getProfileRef()     Returns the current record's "profile_ref" value
 * @method string                   getCategory()       Returns the current record's "category" value
 * @method string                   getGroupName()      Returns the current record's "group_name" value
 * @method integer                  getOrderBy()        Returns the current record's "order_by" value
 * @method integer                  getColNum()         Returns the current record's "col_num" value
 * @method boolean                  getMandatory()      Returns the current record's "mandatory" value
 * @method boolean                  getVisible()        Returns the current record's "visible" value
 * @method boolean                  getOpened()         Returns the current record's "opened" value
 * @method string                   getColor()          Returns the current record's "color" value
 * @method boolean                  getIsAvailable()    Returns the current record's "is_available" value
 * @method integer                  getIconRef()        Returns the current record's "icon_ref" value
 * @method string                   getTitlePerso()     Returns the current record's "title_perso" value
 * @method boolean                  getAllPublic()      Returns the current record's "all_public" value
 * @method WidgetProfiles           getWidgetProfiles() Returns the current record's "WidgetProfiles" value
 * @method WidgetProfilesDefinition setId()             Sets the current record's "id" value
 * @method WidgetProfilesDefinition setProfileRef()     Sets the current record's "profile_ref" value
 * @method WidgetProfilesDefinition setCategory()       Sets the current record's "category" value
 * @method WidgetProfilesDefinition setGroupName()      Sets the current record's "group_name" value
 * @method WidgetProfilesDefinition setOrderBy()        Sets the current record's "order_by" value
 * @method WidgetProfilesDefinition setColNum()         Sets the current record's "col_num" value
 * @method WidgetProfilesDefinition setMandatory()      Sets the current record's "mandatory" value
 * @method WidgetProfilesDefinition setVisible()        Sets the current record's "visible" value
 * @method WidgetProfilesDefinition setOpened()         Sets the current record's "opened" value
 * @method WidgetProfilesDefinition setColor()          Sets the current record's "color" value
 * @method WidgetProfilesDefinition setIsAvailable()    Sets the current record's "is_available" value
 * @method WidgetProfilesDefinition setIconRef()        Sets the current record's "icon_ref" value
 * @method WidgetProfilesDefinition setTitlePerso()     Sets the current record's "title_perso" value
 * @method WidgetProfilesDefinition setAllPublic()      Sets the current record's "all_public" value
 * @method WidgetProfilesDefinition setWidgetProfiles() Sets the current record's "WidgetProfiles" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWidgetProfilesDefinition extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('widget_profiles_definition');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('profile_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('category', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'board_widget',
             ));
        $this->hasColumn('group_name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('order_by', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('col_num', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('mandatory', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('visible', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('opened', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('color', 'string', null, array(
             'type' => 'string',
             'default' => '#5BAABD',
             ));
        $this->hasColumn('is_available', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('icon_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('title_perso', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('all_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('WidgetProfiles', array(
             'local' => 'profile_ref',
             'foreign' => 'id'));
    }
}