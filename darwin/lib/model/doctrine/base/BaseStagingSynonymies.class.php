<?php

/**
 * BaseStagingSynonymies
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $import_ref
 * @property string $taxo_valid_name
 * @property integer $taxo_valid_name_ref
 * @property string $valid_name
 * @property integer $valid_name_ref
 * @property string $valid_name_is_basionym
 * @property string $taxo_syn
 * @property integer $taxo_syn_ref
 * @property string $syn_name
 * @property integer $syn_ref
 * @property string $status
 * @property boolean $to_import
 * @property boolean $imported
 * @property Imports $Import
 * @property TaxonomyMetadata $TaxoValidNameRef
 * @property Taxonomy $ValidNameRef
 * @property TaxonomyMetadata $TaxoSynRef
 * @property Taxonomy $SynRef
 * 
 * @method integer           getId()                     Returns the current record's "id" value
 * @method integer           getImportRef()              Returns the current record's "import_ref" value
 * @method string            getTaxoValidName()          Returns the current record's "taxo_valid_name" value
 * @method integer           getTaxoValidNameRef()       Returns the current record's "taxo_valid_name_ref" value
 * @method string            getValidName()              Returns the current record's "valid_name" value
 * @method integer           getValidNameRef()           Returns the current record's "valid_name_ref" value
 * @method string            getValidNameIsBasionym()    Returns the current record's "valid_name_is_basionym" value
 * @method string            getTaxoSyn()                Returns the current record's "taxo_syn" value
 * @method integer           getTaxoSynRef()             Returns the current record's "taxo_syn_ref" value
 * @method string            getSynName()                Returns the current record's "syn_name" value
 * @method integer           getSynRef()                 Returns the current record's "syn_ref" value
 * @method string            getStatus()                 Returns the current record's "status" value
 * @method boolean           getToImport()               Returns the current record's "to_import" value
 * @method boolean           getImported()               Returns the current record's "imported" value
 * @method Imports           getImport()                 Returns the current record's "Import" value
 * @method TaxonomyMetadata  getTaxoValidNameRef()       Returns the current record's "TaxoValidNameRef" value
 * @method Taxonomy          getValidNameRef()           Returns the current record's "ValidNameRef" value
 * @method TaxonomyMetadata  getTaxoSynRef()             Returns the current record's "TaxoSynRef" value
 * @method Taxonomy          getSynRef()                 Returns the current record's "SynRef" value
 * @method StagingSynonymies setId()                     Sets the current record's "id" value
 * @method StagingSynonymies setImportRef()              Sets the current record's "import_ref" value
 * @method StagingSynonymies setTaxoValidName()          Sets the current record's "taxo_valid_name" value
 * @method StagingSynonymies setTaxoValidNameRef()       Sets the current record's "taxo_valid_name_ref" value
 * @method StagingSynonymies setValidName()              Sets the current record's "valid_name" value
 * @method StagingSynonymies setValidNameRef()           Sets the current record's "valid_name_ref" value
 * @method StagingSynonymies setValidNameIsBasionym()    Sets the current record's "valid_name_is_basionym" value
 * @method StagingSynonymies setTaxoSyn()                Sets the current record's "taxo_syn" value
 * @method StagingSynonymies setTaxoSynRef()             Sets the current record's "taxo_syn_ref" value
 * @method StagingSynonymies setSynName()                Sets the current record's "syn_name" value
 * @method StagingSynonymies setSynRef()                 Sets the current record's "syn_ref" value
 * @method StagingSynonymies setStatus()                 Sets the current record's "status" value
 * @method StagingSynonymies setToImport()               Sets the current record's "to_import" value
 * @method StagingSynonymies setImported()               Sets the current record's "imported" value
 * @method StagingSynonymies setImport()                 Sets the current record's "Import" value
 * @method StagingSynonymies setTaxoValidNameRef()       Sets the current record's "TaxoValidNameRef" value
 * @method StagingSynonymies setValidNameRef()           Sets the current record's "ValidNameRef" value
 * @method StagingSynonymies setTaxoSynRef()             Sets the current record's "TaxoSynRef" value
 * @method StagingSynonymies setSynRef()                 Sets the current record's "SynRef" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStagingSynonymies extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('staging_synonymies');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('import_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('taxo_valid_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('taxo_valid_name_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('valid_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('valid_name_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('valid_name_is_basionym', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('taxo_syn', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('taxo_syn_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('syn_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('syn_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('to_import', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('imported', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Imports as Import', array(
             'local' => 'import_ref',
             'foreign' => 'id'));

        $this->hasOne('TaxonomyMetadata as TaxoValidNameRef', array(
             'local' => 'taxo_valid_name_ref',
             'foreign' => 'id'));

        $this->hasOne('Taxonomy as ValidNameRef', array(
             'local' => 'valid_name_ref',
             'foreign' => 'id'));

        $this->hasOne('TaxonomyMetadata as TaxoSynRef', array(
             'local' => 'taxo_syn_ref',
             'foreign' => 'id'));

        $this->hasOne('Taxonomy as SynRef', array(
             'local' => 'syn_ref',
             'foreign' => 'id'));
    }
}