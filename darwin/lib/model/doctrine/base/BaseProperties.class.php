<?php

/**
 * BaseProperties
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $referenced_relation
 * @property integer $record_id
 * @property string $property_type
 * @property string $applies_to
 * @property string $applies_to_indexed
 * @property integer $date_from_mask
 * @property string $date_from
 * @property integer $date_to_mask
 * @property string $date_to
 * @property boolean $is_quantitative
 * @property string $property_unit
 * @property string $method
 * @property string $method_indexed
 * @property string $lower_value
 * @property float $lower_value_unified
 * @property string $upper_value
 * @property float $upper_value_unified
 * @property string $property_accuracy
 * 
 * @method integer    getId()                  Returns the current record's "id" value
 * @method string     getReferencedRelation()  Returns the current record's "referenced_relation" value
 * @method integer    getRecordId()            Returns the current record's "record_id" value
 * @method string     getPropertyType()        Returns the current record's "property_type" value
 * @method string     getAppliesTo()           Returns the current record's "applies_to" value
 * @method string     getAppliesToIndexed()    Returns the current record's "applies_to_indexed" value
 * @method integer    getDateFromMask()        Returns the current record's "date_from_mask" value
 * @method string     getDateFrom()            Returns the current record's "date_from" value
 * @method integer    getDateToMask()          Returns the current record's "date_to_mask" value
 * @method string     getDateTo()              Returns the current record's "date_to" value
 * @method boolean    getIsQuantitative()      Returns the current record's "is_quantitative" value
 * @method string     getPropertyUnit()        Returns the current record's "property_unit" value
 * @method string     getMethod()              Returns the current record's "method" value
 * @method string     getMethodIndexed()       Returns the current record's "method_indexed" value
 * @method string     getLowerValue()          Returns the current record's "lower_value" value
 * @method float      getLowerValueUnified()   Returns the current record's "lower_value_unified" value
 * @method string     getUpperValue()          Returns the current record's "upper_value" value
 * @method float      getUpperValueUnified()   Returns the current record's "upper_value_unified" value
 * @method string     getPropertyAccuracy()    Returns the current record's "property_accuracy" value
 * @method Properties setId()                  Sets the current record's "id" value
 * @method Properties setReferencedRelation()  Sets the current record's "referenced_relation" value
 * @method Properties setRecordId()            Sets the current record's "record_id" value
 * @method Properties setPropertyType()        Sets the current record's "property_type" value
 * @method Properties setAppliesTo()           Sets the current record's "applies_to" value
 * @method Properties setAppliesToIndexed()    Sets the current record's "applies_to_indexed" value
 * @method Properties setDateFromMask()        Sets the current record's "date_from_mask" value
 * @method Properties setDateFrom()            Sets the current record's "date_from" value
 * @method Properties setDateToMask()          Sets the current record's "date_to_mask" value
 * @method Properties setDateTo()              Sets the current record's "date_to" value
 * @method Properties setIsQuantitative()      Sets the current record's "is_quantitative" value
 * @method Properties setPropertyUnit()        Sets the current record's "property_unit" value
 * @method Properties setMethod()              Sets the current record's "method" value
 * @method Properties setMethodIndexed()       Sets the current record's "method_indexed" value
 * @method Properties setLowerValue()          Sets the current record's "lower_value" value
 * @method Properties setLowerValueUnified()   Sets the current record's "lower_value_unified" value
 * @method Properties setUpperValue()          Sets the current record's "upper_value" value
 * @method Properties setUpperValueUnified()   Sets the current record's "upper_value_unified" value
 * @method Properties setPropertyAccuracy()    Sets the current record's "property_accuracy" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProperties extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('properties');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('referenced_relation', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('record_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('property_type', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('applies_to', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('applies_to_indexed', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('date_from_mask', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('date_from', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '0001-01-01',
             ));
        $this->hasColumn('date_to_mask', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('date_to', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '2038-12-31',
             ));
        $this->hasColumn('is_quantitative', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('property_unit', 'string', null, array(
             'type' => 'string',
             'default' => '',
             ));
        $this->hasColumn('method', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('method_indexed', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('lower_value', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('lower_value_unified', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('upper_value', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('upper_value_unified', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('property_accuracy', 'string', null, array(
             'type' => 'string',
             'default' => '',
             ));

        $this->setSubClasses(array(
             'SubProperties' => 
             array(
              'referenced_relation' => 'specimens',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}