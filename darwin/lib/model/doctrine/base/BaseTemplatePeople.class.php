<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TemplatePeople', 'doctrine');

/**
 * BaseTemplatePeople
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property boolean $is_physical
 * @property string $sub_type
 * @property string $formated_name
 * @property string $formated_name_indexed
 * @property string $formated_name_unique
 * @property string $title
 * @property string $family_name
 * @property string $given_name
 * @property string $additional_names
 * @property integer $birth_date_mask
 * @property date $birth_date
 * @property string $gender
 * 
 * @method integer        getId()                    Returns the current record's "id" value
 * @method boolean        getIsPhysical()            Returns the current record's "is_physical" value
 * @method string         getSubType()               Returns the current record's "sub_type" value
 * @method string         getFormatedName()          Returns the current record's "formated_name" value
 * @method string         getFormatedNameIndexed()   Returns the current record's "formated_name_indexed" value
 * @method string         getFormatedNameUnique()    Returns the current record's "formated_name_unique" value
 * @method string         getTitle()                 Returns the current record's "title" value
 * @method string         getFamilyName()            Returns the current record's "family_name" value
 * @method string         getGivenName()             Returns the current record's "given_name" value
 * @method string         getAdditionalNames()       Returns the current record's "additional_names" value
 * @method integer        getBirthDateMask()         Returns the current record's "birth_date_mask" value
 * @method date           getBirthDate()             Returns the current record's "birth_date" value
 * @method string         getGender()                Returns the current record's "gender" value
 * @method TemplatePeople setId()                    Sets the current record's "id" value
 * @method TemplatePeople setIsPhysical()            Sets the current record's "is_physical" value
 * @method TemplatePeople setSubType()               Sets the current record's "sub_type" value
 * @method TemplatePeople setFormatedName()          Sets the current record's "formated_name" value
 * @method TemplatePeople setFormatedNameIndexed()   Sets the current record's "formated_name_indexed" value
 * @method TemplatePeople setFormatedNameUnique()    Sets the current record's "formated_name_unique" value
 * @method TemplatePeople setTitle()                 Sets the current record's "title" value
 * @method TemplatePeople setFamilyName()            Sets the current record's "family_name" value
 * @method TemplatePeople setGivenName()             Sets the current record's "given_name" value
 * @method TemplatePeople setAdditionalNames()       Sets the current record's "additional_names" value
 * @method TemplatePeople setBirthDateMask()         Sets the current record's "birth_date_mask" value
 * @method TemplatePeople setBirthDate()             Sets the current record's "birth_date" value
 * @method TemplatePeople setGender()                Sets the current record's "gender" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTemplatePeople extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('template_people');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 8,
             ));
        $this->hasColumn('is_physical', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => 'true',
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('sub_type', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('formated_name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('formated_name_indexed', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('formated_name_unique', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('title', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('family_name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('given_name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('additional_names', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('birth_date_mask', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('birth_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0001-01-01',
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('gender', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}