<?php

/**
 * BaseCollectingMethods
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $method
 * @property string $method_indexed
 * @property Doctrine_Collection $Specimens
 * @property Doctrine_Collection $SpecimensMethods
 * @property Doctrine_Collection $StagingMethods
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getMethod()           Returns the current record's "method" value
 * @method string              getMethodIndexed()    Returns the current record's "method_indexed" value
 * @method Doctrine_Collection getSpecimens()        Returns the current record's "Specimens" collection
 * @method Doctrine_Collection getSpecimensMethods() Returns the current record's "SpecimensMethods" collection
 * @method Doctrine_Collection getStagingMethods()   Returns the current record's "StagingMethods" collection
 * @method CollectingMethods   setId()               Sets the current record's "id" value
 * @method CollectingMethods   setMethod()           Sets the current record's "method" value
 * @method CollectingMethods   setMethodIndexed()    Sets the current record's "method_indexed" value
 * @method CollectingMethods   setSpecimens()        Sets the current record's "Specimens" collection
 * @method CollectingMethods   setSpecimensMethods() Sets the current record's "SpecimensMethods" collection
 * @method CollectingMethods   setStagingMethods()   Sets the current record's "StagingMethods" collection
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCollectingMethods extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('collecting_methods');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('method', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('method_indexed', 'string', null, array(
             'type' => 'string',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Specimens', array(
             'refClass' => 'SpecimensMethods',
             'local' => 'collecting_method_ref',
             'foreign' => 'specimen_ref'));

        $this->hasMany('SpecimensMethods', array(
             'local' => 'id',
             'foreign' => 'collecting_method_ref'));

        $this->hasMany('StagingMethods', array(
             'local' => 'id',
             'foreign' => 'collecting_method_ref'));
    }
}