<?php

/**
 * WidgetProfilesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class WidgetProfilesTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return WidgetProfilesTable The table instance
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('WidgetProfiles');
    }
	
	public function getSpecimensWidgets($id)
	{
		//$results = array();
		$q = Doctrine_Query::create()
        ->select('w.*')
        ->from('WidgetProfilesDefinition w')
        ->where('w.profile_ref = ? ', $id)
		->andWhere("w.category='specimen_widget'")
        ->orderBy('w.group_name');
		//$results = $q->fetchArray();
		return $q->execute();
	}
	
	  public function getWidgets($category, $collection = null)
	  {
		  $q = Doctrine_Query::create()
				->from('WidgetProfilesDefinition p INDEXBY p.group_name')
				->orderBy('p.col_num ASC, p.order_by ASC, p.group_name ASC');
		return $this->addCategoryProfile($q,$category,$collection)->execute();
	  }
	  
	  public function setProfileRef($ref)
	  {
		$this->profile_ref = $ref;
		return $this;
	  }
	  
	   public function setDbUserType($ref)
	  {
		$this->db_user_type = $ref;
		return $this;
	  }
		  
      public function addCategoryProfile(Doctrine_Query $q = null, $category, $collection = null)
	  {
		
		if (is_null($q))
		{
			$q = Doctrine_Query::create()
				->from('WidgetProfilesDefinition p');
		}

		$alias = $q->getRootAlias();

		$q->andWhere($alias . '.profile_ref = ?', $this->profile_ref)
			->andWhere($alias . '.category = ?', $category)
			->andWhere('p.is_available = true') ;
		if ($this->db_user_type == Users::REGISTERED_USER) 
		{
		  if($collection !== null) {
			$q->andWhere("(p.all_public = true OR p.collections like ?)",array("%,".trim($collection, "%,").",%"));
		  }
		  else {
			$q->andWhere('p.all_public = true');
		  }
		}
		return $q;
	  }
	  
	    public function sortWidgets($widget_list, $translator) 
		{
			$widgets = array();
			foreach($widget_list as $w) {
			  $widgets[$translator->__($w->getTitlePerso())] = $w;
			}
			ksort($widgets);
			return $widgets;
		  }
  
}