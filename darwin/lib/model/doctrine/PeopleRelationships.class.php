<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PeopleRelationships extends BasePeopleRelationships
{
  private static $possible_type = array('belongs to' => 'belongs to',
                 'is department of' => 'is department of',
                 'is section of' => 'is section of',
                 'works for' => 'works for'
                );
 
  public static function getPossibleTypes()
  {
    try{
        $i18n_object = sfContext::getInstance()->getI18n();
    }
    catch( Exception $e )
    {
        return self::$possible_type;
    }
    return array_map(array($i18n_object, '__'), self::$possible_type);
  }  
 
  public function getLevel()
  {
    $level = substr_count($this->getPath(),'/');
    if($level >= 1)
      return $level - 1;
    return $level;
  }
    
  public function showPadding($padding_item = '&nbsp;&nbsp;&nbsp;')
  {
      return str_repeat($padding_item, $this->getLevel());
  }

  public function setActivityDateFrom($fd)
  {
     if(is_string($fd))
     {
	$this->_set('activity_date_from',$fd);
     }
     else
     {
      $this->_set('activity_date_from', $fd->format('Y/m/d') );
      $this->_set('activity_date_from_mask', $fd->getMask() );
     }
  }


  public function setActivityDateTo($fd)
  {
     if(is_string($fd))
     {
	$this->_set('activity_date_to',$fd);
     }
     else
     {
      $this->_set('activity_date_to', $fd->format('Y/m/d') );
      $this->_set('activity_date_to_mask', $fd->getMask() );
     }
  }
  
 
  public function getActivityDateToObject()
  {
    $date = new FuzzyDateTime($this->_get('activity_date_to'),$this->_get('activity_date_to_mask'),true);
    return $date;
  }

  public function getActivityDateFromObject()
  {
    $date = new FuzzyDateTime($this->_get('activity_date_from'),$this->_get('activity_date_from_mask'),true);
    return $date;
  }

  public function getActivityDateFromMasked($tag='em')
  {
    return $this->getActivityDateFromObject()->getDateMasked($tag);
  }
  
  public function getActivityDateToMasked($tag='em')
  {
    return $this->getActivityDateToObject()->getDateMasked($tag);
  }

  public function getActivityDateFrom()
  {
    return $this->getActivityDateFromObject()->getDateTimeMaskedAsArray();
  }

  public function getActivityDateTo()
  {
    return $this->getActivityDateToObject()->getDateTimeMaskedAsArray();
  }
}
