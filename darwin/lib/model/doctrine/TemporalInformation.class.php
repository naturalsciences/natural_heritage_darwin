<?php

/**
 * TemporalInformation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class TemporalInformation extends BaseTemporalInformation
{

    public function getFromDateMasked ()
  {
    $dateTime = new FuzzyDateTime($this->_get('from_date'), $this->_get('from_date_mask'),true, true);
    return $dateTime->getDateMasked();
  }
  
  public function getToDateMasked ()
  {
    $dateTime = new FuzzyDateTime($this->_get('to_date'), $this->_get('to_date_mask'),false, true);
    return $dateTime->getDateMasked();
  }
  
  public function getFromDate()
  {
    $from_date = new FuzzyDateTime($this->_get('from_date'), $this->_get('from_date_mask'),true,true);
    return $from_date->getDateTimeMaskedAsArray();
  }

  public function getToDate()
  {
    $to_date = new FuzzyDateTime($this->_get('to_date'), $this->_get('to_date_mask'), false,true);
    return $to_date->getDateTimeMaskedAsArray();
  }

  public function setFromDate($fd)
  {
    if ($fd instanceof FuzzyDateTime)
    {
      $this->_set('from_date', $fd->format('Y/m/d H:i:s'));
      $this->_set('from_date_mask', $fd->getMask());
    }
    else
    {
      $dateTime = new FuzzyDateTime($fd, 56, true,true);
      if(is_array($fd))
        $dateTime->setMask(FuzzyDateTime::getMaskFromDate($fd));
      $this->_set('from_date', $dateTime->format('Y/m/d H:i:s'));
      $this->_set('from_date_mask', $dateTime->getMask());
    }
  }

  public function setToDate($fd)
  {
    if ($fd instanceof FuzzyDateTime)
    {
      $this->_set('to_date', $fd->format('Y/m/d H:i:s'));
      $this->_set('to_date_mask', $fd->getMask());
    }
    else
    {
      $dateTime = new FuzzyDateTime($fd, 56, false,true);
      if(is_array($fd))
        $dateTime->setMask(FuzzyDateTime::getMaskFromDate($fd));
      $this->_set('to_date', $dateTime->format('Y/m/d H:i:s'));
      $this->_set('to_date_mask', $dateTime->getMask());
    }
  }
  
  public function getFromDateString()
 {
    $returned="";
    $previous="";
    $tmp=$this->getFromDate();
    $i=0;
    foreach($tmp as $key=> $elem)
    {
        if(strlen(trim($elem))==0&& $i==0 && strlen(trim($tmp[1]))==0)
        {
            $elem="1";
        }
        if(strlen(trim($elem))==0&& $i==2 && (strlen(trim($previous)))>0)
        {
            $elem="1";
        }
        if(strlen(trim($elem))>0)
        {
            if(strlen(trim($elem))==0&& $i==1 && strlen(trim($tmp[2]))==0)
            {
                $elem="1";
            }
            if($i>0&&$i<3)
            {
                 $returned.="/";
            }
            elseif($i>=4)
            {
                 $returned.=":";
            }
            elseif($i==3)
            {
                 $returned.=" ";
            }
             if($i>0)
             {
                $elem=str_pad($elem, 2, '0', STR_PAD_LEFT);
             }
             $previous=$elem;            
            $returned.=$elem;
        }
        $i++;
        
    }
    return $returned;
 } 
 
  public function getToDateString()
 {
    $returned="";
    $previous="";
   
   
    $tmp=$this->getToDate();
    $i=0;
    foreach($tmp as $key=>$elem)
    {
        if(strlen(trim($elem))==0&& $i==0 && strlen(trim($tmp[1]))==0)
        {
            $elem="12";
        }
        if(strlen(trim($elem))==0&& $i==2 && (strlen(trim($previous)))>0)
        {
            $elem= cal_days_in_month( CAL_GREGORIAN , $tmp["month"] , $tmp["year"]);
        }
        if(strlen(trim($elem))>0)
        {
            if($i>0&&$i<3)
            {
                 $returned.="/";
            }
            elseif($i>=4)
            {
                 $returned.=":";
            }
            elseif($i==3)
            {
                 $returned.=" ";
            }
            if($i>0)
            {
                 $elem=str_pad($elem, 2, '0', STR_PAD_LEFT);
            }
             $previous=$elem;
            $returned.=$elem;
        }
        
       
        $i++;
    }
    return $returned;
 }
/*
public function getTagsWithCode($view = null)
  {
    $str = ''

    $str .=  '<b class="date_from">'.$this->getFromDateMasked().'</b>';
    $str .=  '<b class="date_to">'.$this->getToDateMasked().'</b>';
    //ftheeten 2018 12 01
	$str .=  '<b class="date_from_mask">'.$this->getFromDateMask().'</b>';
	$str .=  '<b class="date_from_year">'.$this->getFromDate()['year'].'</b>';
	$str .=  '<b class="date_from_month">'.$this->getFromDate()['month'].'</b>';
    $str .=  '<b class="date_from_day">'.$this->getFromDate()['day'].'</b>';
	$str .=  '<b class="date_from_hour">'.$this->getFromDate()['hour'].'</b>';
    $str .=  '<b class="date_from_minute">'.$this->getFromDate()['minute'].'</b>';
	$str .=  '<b class="date_from_second">'.$this->getFromDate()['second'].'</b>';
    $str .=  '<b class="date_to_mask">'.$this->getToDateMask().'</b>';
	$str .=  '<b class="date_to_year">'.$this->getToDate()['year'].'</b>';
	$str .=  '<b class="date_to_month">'.$this->getToDate()['month'].'</b>';
    $str .=  '<b class="date_to_day">'.$this->getToDate()['day'].'</b>';
	$str .=  '<b class="date_to_hour">'.$this->getToDate()['hour'].'</b>';
    $str .=  '<b class="date_to_minute">'.$this->getToDate()['minute'].'</b>';
	$str .=  '<b class="date_to_second">'.$this->getToDate()['second'].'</b>';
    return $str;
  }*/ 
}
