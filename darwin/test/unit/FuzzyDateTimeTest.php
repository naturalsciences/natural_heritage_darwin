<?php
include(dirname(__FILE__).'/../bootstrap/unit.php');
$t = new lime_test(79, new lime_output_color());

$t->info('FuzzyDateTime instanciation');
$t->isa_ok(new FuzzyDateTime(), 'FuzzyDateTime', 'New creates an object of the right class');
$t->can_ok(new FuzzyDateTime(), 'getDateTimeStringFromArray', 'Object FuzzyDateTime has a method named: getDateTimeStringFromArray');
$t->can_ok(new FuzzyDateTime(), 'checkDateArray', 'Object FuzzyDateTime has a method named: checkDateArray');
$t->can_ok(new FuzzyDateTime(), 'setMask', 'Object FuzzyDateTime has a method named: setMask');
$t->can_ok(new FuzzyDateTime(), 'setStart', 'Object FuzzyDateTime has a method named: setStart');
$t->can_ok(new FuzzyDateTime(), 'setWithTime', 'Object FuzzyDateTime has a method named: setWithTime');
$t->can_ok(new FuzzyDateTime(), 'setdateFormat', 'Object FuzzyDateTime has a method named: setDateFormat');
$t->can_ok(new FuzzyDateTime(), 'setTimeFormat', 'Object FuzzyDateTime has a method named: setTimeFormat');
$t->can_ok(new FuzzyDateTime(), 'getMask', 'Object FuzzyDateTime has a method named: getMask');
$t->can_ok(new FuzzyDateTime(), 'getStart', 'Object FuzzyDateTime has a method named: getStart');
$t->can_ok(new FuzzyDateTime(), 'getWithTime', 'Object FuzzyDateTime has a method named: getWithTime');
$t->can_ok(new FuzzyDateTime(), 'getDateFormat', 'Object FuzzyDateTime has a method named: getDateFormat');
$t->can_ok(new FuzzyDateTime(), 'getTimeFormat', 'Object FuzzyDateTime has a method named: getTimeFormat');
$t->can_ok(new FuzzyDateTime(), 'setMaskFromDate', 'Object FuzzyDateTime has a method named: setMaskFromDate');
$t->can_ok(new FuzzyDateTime(), 'getMaskFromDate', 'Object FuzzyDateTime has a method named: getMaskFromDate');
$t->can_ok(new FuzzyDateTime(), 'getMaskFor', 'Object FuzzyDateTime has a method named: getMaskFor');
$t->can_ok(new FuzzyDateTime(), 'getDateTime', 'Object FuzzyDateTime has a method named: getDateTime');
$t->can_ok(new FuzzyDateTime(), 'getDateTimeAsArray', 'Object FuzzyDateTime has a method named: getDateTimeAsArray');
$t->can_ok(new FuzzyDateTime(), 'getDateMasked', 'Object FuzzyDateTime has a method named: getDateMasked');
$t->can_ok(new FuzzyDateTime(), '__ToString', 'Object FuzzyDateTime has a method named: __ToString');
$fdt = new FuzzyDateTime();
$currentDate = $fdt->format('d/m/Y');
$currentDateTime = $fdt->format('d/m/Y H:i:s');
$t->is($fdt->getDateTime(), $currentDate,'Get the date coming with the FuzzyDateTime object instanciation');
$t->is($fdt->getDateTime(true), $currentDateTime,'Get the date and time coming with the FuzzyDateTime object instanciation: ok');
$fdt->setStart(false);
$t->is($fdt->getStart(), false, 'The start value is False');
$fdt->setMask(32);
$t->is($fdt->getMask(), 32, 'The Mask value is 32 (year)');
$fdt = new FuzzyDateTime('1975/02/24 13:12:11');
$testArray = array('year'=>1975, 'month'=>02, 'day'=>24, 'hour'=>13, 'minute'=>12, 'second'=>11);
$dateTimeArray = $fdt->getDateTimeAsArray();
$testDate = '24/02/1975';
$testDateTime = '24/02/1975 13:12:11';
$testDateTime2 = '1975/02/24 13:12:11';
$testDateUS = '02/24/1975';

$t->is_deeply($dateTimeArray, $testArray, 'array is the same');
$fdt->setWithTime(true);
$t->is($fdt->getDateTime($fdt->getWithTime()), $testDateTime,'Get the date and time coming with the FuzzyDateTime object instanciation: ok');
$t->is($fdt.' as string', $testDateTime.' as string', 'String conversion of FuzzyDateTime object is correct');
$fdt->setDateFormat('m/d/Y');
$t->is($fdt->getDateTime(false), $testDateUS, 'New US date formating correctly applied');
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray,false,$fdt->getWithTime()), $testDateTime2, 'Full date: Extraction of date from array succeeded !');
$testArray['second']='';
$testDateTime2 = '1975/02/24 13:12:59';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray,false,$fdt->getWithTime()), $testDateTime2, 'Date without seconds - start flag set at false: Extraction of date from array succeeded !');
$testArray['minute']='';
$testDateTime2 = '1975/02/24 13:59:59';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray,false,$fdt->getWithTime()), $testDateTime2, 'Date without minutes - start flag set at false: Extraction of date from array succeeded !');
$testArray['hour']='';
$testDateTime2 = '1975/02/24 23:59:59';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray,false,$fdt->getWithTime()), $testDateTime2, 'Date without hours - start flag set at false: Extraction of date from array succeeded !');
$testArray['day']='';
$testDateTime2 = '1975/02/28 23:59:59';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray,false,$fdt->getWithTime()), $testDateTime2, 'Date without days - start flag set at false: Extraction of date from array succeeded !');
$testArray['month']='';
$testDateTime2 = '1975/12/31 23:59:59';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray,false,$fdt->getWithTime()), $testDateTime2, 'Date without months - start flag set at false: Extraction of date from array succeeded !');
$testArray['year']='';
$testDateTime2 = '2038/12/31 23:59:59';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray,false,$fdt->getWithTime()), $testDateTime2, 'Date without years - start flag set at false: Extraction of date from array succeeded !');
$fdt->setStart(true);
$testArray['year']='1975';
$testDateTime2 = '1975/01/01 00:00:00';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray, $fdt->getStart(), $fdt->getWithTime()), $testDateTime2, 'Date without month - start flag set at true: Extraction of date from array succeeded !');
$testArray['month']='02';
$testDateTime2 = '1975/02/01 00:00:00';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray, $fdt->getStart(), $fdt->getWithTime()), $testDateTime2, 'Date without days - start flag set at false: Extraction of date from array succeeded !');
$testArray['day']='24';
$testDateTime2 = '1975/02/24 00:00:00';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray, $fdt->getStart(), $fdt->getWithTime()), $testDateTime2, 'Date without hours - start flag set at false: Extraction of date from array succeeded !');
$testArray['hour']='13';
$testDateTime2 = '1975/02/24 13:00:00';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray, $fdt->getStart(), $fdt->getWithTime()), $testDateTime2, 'Date without minutes - start flag set at false: Extraction of date from array succeeded !');
$testArray['minute']='12';
$testDateTime2 = '1975/02/24 13:12:00';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray, $fdt->getStart(), $fdt->getWithTime()), $testDateTime2, 'Date without seconds - start flag set at false: Extraction of date from array succeeded !');
$testArray['second']='11';
$testDateTime2 = '1975/02/24 13:12:11';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray, $fdt->getStart(), $fdt->getWithTime()), $testDateTime2, 'Date with everything - start flag set at false: Extraction of date from array succeeded !');
$testArray['day']='';
$testDateTime2 = '1975/02/01';
$t->is(FuzzyDateTime::getDateTimeStringFromArray($testArray, $fdt->getStart()), $testDateTime2, 'Date without hours - start flag set at false: Extraction of date from array succeeded !');
$testArray['day']='24';
$t->is(FuzzyDateTime::getMaskFromDate($testArray), 63, 'The Mask returned by getMaskFromDate is correct !');
$fdt->setMaskFromDate($testArray);
$t->is($fdt->getMask(), 63, 'Setting of mask from date array worked !');
$testArray['second']='';
$t->is(FuzzyDateTime::getMaskFromDate($testArray), 62, 'The Mask returned by getMaskFromDate is correct !');
$testArray['minute']='';
$t->is(FuzzyDateTime::getMaskFromDate($testArray), 60, 'The Mask returned by getMaskFromDate is correct !');
$testArray['hour']='';
$t->is(FuzzyDateTime::getMaskFromDate($testArray), 56, 'The Mask returned by getMaskFromDate is correct !');
$testArray['day']='';
$t->is(FuzzyDateTime::getMaskFromDate($testArray), 48, 'The Mask returned by getMaskFromDate is correct !');
$testArray['month']='';
$t->is(FuzzyDateTime::getMaskFromDate($testArray), 32, 'The Mask returned by getMaskFromDate is correct !');
$testArray['year']='';
$t->is(FuzzyDateTime::getMaskFromDate($testArray), 0, 'The Mask returned by getMaskFromDate is correct !');
$fdt->setDateFormat('d/m/Y');
$fdt->setTimeFormat('H:i:s');
$fdt->setWithTime(true);
$fdt->setMask(0);
$t->is($fdt->getDateMasked(), '<em>24/02/1975 13:12:11</em>', 'The date displayed is well with 0 as mask second mask');
$fdt->setMask(1);
$t->is($fdt->getDateMasked(), '<em>24/02/1975 13:12</em>:11', 'The date displayed is well with second mask only');
$fdt->setMask(2);
$t->is($fdt->getDateMasked(), '<em>24/02/1975 13</em>:12:<em>11</em>', 'The date displayed is well with minute only');
$fdt->setMask(4);
$t->is($fdt->getDateMasked(), '<em>24/02/1975</em> 13:<em>12:11</em>', 'The date displayed is well with hours only');
$fdt->setMask(8);
$t->is($fdt->getDateMasked(), '24/<em>02/1975 13:12:11</em>', 'The date displayed is well with days only');
$fdt->setMask(16);
$t->is($fdt->getDateMasked(), '<em>24</em>/02/<em>1975 13:12:11</em>', 'The date displayed is well with month only');
$fdt->setMask(32);
$t->is($fdt->getDateMasked(), '<em>24/02</em>/1975 <em>13:12:11</em>', 'The date displayed is well with year only');
$fdt->setMask(33);
$t->is($fdt->getDateMasked(), '<em>24/02</em>/1975 <em>13:12</em>:11', 'The date displayed is well as year + seconds');
$fdt->setMask(48);
$t->is($fdt->getDateMasked(), '<em>24</em>/02/1975 <em>13:12:11</em>', 'The date displayed is well as year + month');
$fdt->setMask(56);
$t->is($fdt->getDateMasked(), '24/02/1975 <em>13:12:11</em>', 'The date displayed is well with d-m-y ');
$fdt->setWithTime(false);
$fdt->setMask(48);
$t->is($fdt->getDateMasked(), '<em>24</em>/02/1975', 'The date displayed is well without time');
$fdt->setWithTime(true);
$fdt->setMask(60);
$t->is($fdt->getDateMasked(), '24/02/1975 13:<em>12:11</em>', 'The date displayed is well without minute and sec');
$fdt->setMask(62);
$t->is($fdt->getDateMasked(), '24/02/1975 13:12:<em>11</em>', 'The date displayed is well without seconds');
$fdt->setMask(63);
$t->is($fdt->getDateMasked(), '24/02/1975 13:12:11', 'The date displayed is well with a complete mask');
$fdt->setMask(48);
$t->is($fdt->getDateMasked('strong'), '<strong>24</strong>/02/1975 <strong>13:12:11</strong>', 'The date displayed is well with a tag changing');
$t->is($fdt->getDateMasked('em','y-d-m-s-i-g'), '75-<em>24</em>-02-<em>11-12-1</em>', 'The date displayed is well with another format');

$t->is(FuzzyDateTime::checkDateTimeStructure($testArray), '', 'Date structure test ok');
$testArray['year']='1975';
$t->is(FuzzyDateTime::checkDateTimeStructure($testArray), '', 'Date structure test ok');
$testArray['day']='24';
$t->is(FuzzyDateTime::checkDateTimeStructure($testArray), 'month_missing', 'Date structure test ok');
$testArray['year']='';
$t->is(FuzzyDateTime::checkDateTimeStructure($testArray), 'year_missing', 'Date structure test ok');
$testArray['year']='1975';
$testArray['month']='02';
$testArray['day']='';
$testArray['hour']='02';
$t->is(FuzzyDateTime::checkDateTimeStructure($testArray), 'day_missing', 'Date structure test ok');
$testArray['year']='0001';
$testArray['month']='01';
$testArray['day']='01';
$fdt=new FuzzyDateTime($testArray);
$t->is($fdt->format('d/m/Y'), '01/01/0001', 'Date lower bound format ok');

$testArray = array('year'=>'', 'month'=>'', 'day'=>'', 'hour'=>'', 'minute'=>'', 'second'=>'');
$fdt = new FuzzyDateTime('2009/12/05');
$t->is_deeply($fdt->getDateTimeMaskedAsArray(), $testArray, 'array is the same');

$testArray = array('year'=>2009, 'month'=>12, 'day'=>'', 'hour'=>'', 'minute'=>'', 'second'=>'');
$fdt->setMask(48);
$t->is_deeply($fdt->getDateTimeMaskedAsArray(), $testArray, 'array is the same');

$testArray = array('year'=>2009, 'month'=>12, 'day'=>05, 'hour'=>'', 'minute'=>'', 'second'=>'');
$fdt->setMask(56);
$t->is_deeply($fdt->getDateTimeMaskedAsArray(), $testArray, 'array is the same');

$testArray = array('year'=>2009, 'month'=>2);
$t->is('2009/02/28',FuzzyDateTime::getDateTimeStringFromArray($testArray, false),'Date are nicelly completed with missing day in fev');

$testArray = array('year'=>2009, 'month'=>12);
$t->is('2009/12/31',FuzzyDateTime::getDateTimeStringFromArray($testArray, false),'Date are nicelly completed  with missing day in decembre');

$testArray = array('year'=>2009, 'month'=>100);
$t->is('2038/12/31',FuzzyDateTime::getDateTimeStringFromArray($testArray, false),'Default date is set from wrong dates');

$fdt=new FuzzyDateTime(array('year'=>'2005', 'month'=>'02', 'day'=>'02', 'hour'=>'01', 'minute'=>0, 'second'=>0),63,false,true);
$fdt->setDateFormat('Y/m/d');
$t->is($fdt->getDateMasked(), '2005/02/02 01:00:00','Default date is set from wrong dates');