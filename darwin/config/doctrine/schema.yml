Institutions:
  tableName: people
  columns:
        id: { type: integer, notnull: true,primary: true, autoincrement: true}
        is_physical: { type: boolean, notnull: false}
        sub_type: { type: string }
        formated_name: { type: string}
        formated_name_indexed: { type: string}
        family_name: { type: string, notnull: true}
        additional_names: { type: string}

People:
    columns:
        id: { type: integer, notnull: true,primary: true, autoincrement: true}
        is_physical: { type: boolean, notnull: true}
        sub_type: { type: string }
        formated_name: { type: string}
        formated_name_indexed: { type: string}
        title: { type: string}
        family_name: { type: string, notnull: true}
        given_name: { type: string}
        additional_names: { type: string}
        birth_date_mask: { type: integer, notnull: true, default:0}
        birth_date: { type: string, notnull: true, default: '0001-01-01'}
        gender: { type: enum, values: ['M','F'] }
        end_date_mask:  { type: integer, notnull: true, default:0}
        end_date: { type: string, notnull: true, default: '2038-12-31'}
        activity_date_from: { type: string, notnull: true, default: '0001-01-01'}
        activity_date_from_mask: { type: integer, notnull: true, default:0}
        activity_date_to: { type: string, notnull: true, default: '2038-12-31'}
        activity_date_to_mask: { type: integer, notnull: true, default:0}

CatalogueRelationships:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id_1: { type: integer, notnull: true}
        record_id_2: { type: integer, notnull: true}
        relationship_type: { type: string, notnull: true, default: recombined from }


CataloguePeople:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer, notnull: true}
        people_type: {  type: string, notnull: true , default: author }
        people_sub_type: {  type: string, notnull: true }
        order_by: { type: integer, notnull: true, default: 1}
        people_ref: { type: integer, notnull: true}
    relations:
        People:
            local: people_ref
            foreign: id

CatalogueLevels:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        level_type: {  type: string, notnull: true}
        level_name: {  type: string, notnull: true}
        level_sys_name: {  type: string, notnull: true}
        optional_level: { type: boolean, notnull: true, default: false}
        level_order: { type: integer, notnull: true}

PossibleUpperLevels:
    columns:
        level_ref: { type: integer, notnull: true, primary:true}
        level_upper_ref: { type: integer, notnull: true, primary:true}
    relations:
        UpperLevel:
            class: CatalogueLevels
            local: level_upper_ref
            foreign: id
        Level:
            class: CatalogueLevels
            local: level_ref
            foreign: id

Comments:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer, notnull: true}
        notion_concerned: { type: string, notnull: true}
        comment: { type: string, notnull: true}
        comment_indexed: { type: string}

# This sub class is used just for comment search in specimen search filter
SubComments:
    inheritance:
        extends: Comments
        type: column_aggregation
        keyField: referenced_relation
        keyValue: specimens

ExtLinks:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer, notnull: true}
        url: { type: string, notnull: true}
        type: { type: string, notnull: true, default:'ext'}
        comment: { type: string, notnull: true}
        comment_indexed: { type: string}

TagGroups:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        gtu_ref:  { type: integer, notnull: true }
        group_name: {type: string, notnull: true}
        group_name_indexed: { type: string }
        sub_group_name:  { type: string, notnull: true }
        sub_group_name_indexed: {type: string}
        color: {type: string, default: '#FFFFFF' }
        tag_value: { type: string, notnull: true}
        international_name: { type: string, notnull: true, default:''}
    relations:
        Gtu:
            local: gtu_ref
            foreign: id
        #ftheeten 2018 07 01
        DoctrineTemporalInformationGtuGroup:
            local: gtu_ref
            foreign: id
        #ftheeten 2018 07 01
        DoctrineTemporalInformationGtuGroupUnnest:
            local: gtu_ref
            foreign: id
        #ftheeten 2018 07 01
        DoctrineTemporalInformationGtuGroupTags:
            local: gtu_ref
            foreign: id
        #ftheeten 2018 07 01
        DoctrineTemporalInformationGtuGroupUnnestTags:
            local: gtu_ref
            foreign: id
        DoctrineSpecimensTags:
            local: gtu_ref
            foreign: gtu_ref

Tags:
    columns:
        gtu_ref:  { type: integer, notnull: true, primary:true}
        group_ref:  {type: integer, notnull: true, primary:true}
        tag:  { type: string, notnull: true}
        group_type:  { type: string, notnull: true}
        sub_group_type:  { type: string, notnull: true}
        tag_indexed: { type: string, notnull: true, primary:true}
    relations:
        TagGroups:
            local: group_ref
            foreign: id
        Gtu:
            local: gtu_ref
            foreign: id
        #ftheeten 2018 07 01
        DoctrineTemporalInformationGtuGroup:
            local: gtu_ref
            foreign: id
        #ftheeten 2018 07 01
        DoctrineTemporalInformationGtuGroupUnnest:
            local: gtu_ref
            foreign: id
        #ftheeten 2018 07 01
        DoctrineTemporalInformationGtuGroupTags:
            local: gtu_ref
            foreign: id
        #ftheeten 2018 07 01
        DoctrineTemporalInformationGtuGroupUnnestTags:
            local: gtu_ref
            foreign: id
        DoctrineSpecimensTags:
            local: gtu_ref
            foreign: gtu_ref

Gtu:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        code: {type: string, notnull: true}
        gtu_from_date_mask: { type: integer, notnull: true, default:0}
        gtu_from_date: { type: string, notnull: true, default: '0001-01-01'}
        gtu_to_date_mask: { type: integer, notnull: true, default:0}
        gtu_to_date: { type: string, notnull: true, default: '2038-12-31'}
        latitude: {type: float}
        longitude: {type: float}
        location: {type: string}
        lat_long_accuracy: {type: float}
        elevation: {type: float}
        elevation_accuracy: {type: float}
        #ftheeten 2018 07 26 
        import_ref: {type: integer}
        collector_refs: {type: string}
        expedition_refs: {type: string}
        collection_ref: {type: integer}
        #ftheeten rmca 2015 06 01
        coordinates_source: {type: string}
        #ftheeten rmca 2015 06 01
        latitude_dms_degree: {type: integer}
        #ftheeten rmca 2015 06 01
        latitude_dms_minutes: {type: float}
        #ftheeten rmca 2015 06 01
        latitude_dms_seconds: {type: float}
        #ftheeten rmca 2015 06 01
        latitude_dms_direction: {type: integer}
        #ftheeten rmca 2015 06 01
        longitude_dms_degree: {type: integer}
        #ftheeten rmca 2015 06 01
        longitude_dms_minutes: {type: float}
        #ftheeten rmca 2015 06 01
        longitude_dms_seconds: {type: float}
        #ftheeten rmca 2015 06 01
        longitude_dms_direction: {type: integer}
        #ftheeten rmca 2010 02 05
        latitude_utm: {type: float}
        #ftheeten rmca 2010 02 05
        longitude_utm: {type: float}
        #ftheeten rmca 2010 02 05
        utm_zone: {type: varchar}
        location: {type: string}
        #JMHerpers 2019 05 07
        nagoya: { type: string, notnull: true, default: 'not defined'}
    #ftheeten 2018 12 11
    relations:
        Tags:
            local: id
            foreign: gtu_ref
            class: Tags
        TemporalInformation:
            local: id
            foreign: gtu_ref
            class: TemporalInformation
        DoctrineGtuComments:
            local: id
            foreign : record_id
            class: DoctrineGtuComments
        GtuComments:
            local: id
            foreign : record_id
            class: GtuComments
        GtuProperties:
            local: id
            foreign : record_id
            class: GtuProperties

Properties:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer, notnull: true}
        property_type: {type: string, notnull: true}
        applies_to: {type: string}
        applies_to_indexed: {type: string}
        date_from_mask: { type: integer, notnull: true, default:0}
        date_from: { type: string, notnull: true, default: '0001-01-01'}
        date_to_mask: { type: integer, notnull: true, default:0}
        date_to: { type: string, notnull: true, default: '2038-12-31'}
        is_quantitative: {type: boolean, default: false }
        property_unit: {type: string, default: ''}
        method: {type: string}
        method_indexed: {type: string}
        lower_value: {type: string, notnull: true, default:''}
        lower_value_unified: {type: float}
        upper_value: {type: string, notnull: true , default:''}
        upper_value_unified: {type: float}
        property_accuracy: {type: string, default:''}

# This sub class is used just for comment search in specimen search filter
SubProperties:
    inheritance:
        extends: Properties
        type: column_aggregation
        keyField: referenced_relation
        keyValue: specimens

Identifications:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer, notnull: true}
        notion_concerned: { type: string, notnull: true, default:taxonomy}
        notion_date: { type: string, notnull: true, default: '0001-01-01'}
        notion_date_mask: { type: integer, notnull: true, default:0}
        value_defined:  { type: string}
        value_defined_indexed: { type: string}
        determination_status: { type: string}
        order_by: { type: integer, notnull: true, default: 1}

VernacularNames:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer, notnull: true}
        community: { type: string, notnull: true}
        name:  { type: string, notnull: true}
        name_indexed:  { type: string}

Expeditions:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        name:  { type: string, notnull: true}
        name_indexed:  { type: string}
        expedition_from_date_mask: { type: integer, notnull: true, default:0}
        expedition_from_date: { type: string, default:'0001-01-01'}
        expedition_to_date_mask: { type: integer, notnull: true, default:0}
        expedition_to_date: { type: string, default: '2038-12-31'}

Users:
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        is_physical: { type: boolean, notnull: true}
        sub_type: { type: string }
        formated_name: { type: string}
        formated_name_indexed: { type: string}
        title: { type: string}
        family_name: { type: string, notnull: true}
        given_name: { type: string}
        additional_names: { type: string}
        birth_date_mask: { type: integer, notnull: true, default:0}
        birth_date: { type: string, notnull: true, default: '0001-01-01'}
        gender: { type: enum, values: ['M','F'] }
        db_user_type: { type: integer, notnull: true, default: 1}
        people_id: { type: integer}
        selected_lang: { type: string,notnull:true, default:en}
    relations:
        People:
            local: people_id
            foreign: id

PeopleLanguages:
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        people_ref: { type: integer, notnull: true}
        language_country: { type: string, notnull: true, default: en}
        mother: { type: boolean, notnull: true, default: true}
        preferred_language: { type: boolean, notnull: true, default: false}
    relations:
        People:
            local: people_ref
            foreign: id

PeopleRelationships:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        relationship_type: { type: string, notnull: true, default: 'belongs to' }
        person_1_ref: { type: integer, notnull: true}
        person_2_ref: { type: integer, notnull: true}
        path: { type: string }
        activity_date_from: { type: string, notnull: true, default: '0001-01-01'}
        activity_date_from_mask: { type: integer, notnull: true, default:0}
        activity_date_to: { type: string, notnull: true, default: '2038-12-31'}
        activity_date_to_mask: { type: integer, notnull: true, default:0}
        person_user_role: { type: string }
    relations:
        Parent:
            class: Institutions
            local: person_1_ref
            foreign: id
        Child:
            class: People
            local: person_2_ref
            foreign: id

PeopleComm:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        person_user_ref: { type: integer, notnull: true}
        comm_type: { type: string, notnull: true, default: 'phone_fax' }
        tag: { type: string, notnull: true, default: ''}
        entry: { type: string, notnull: true }
    relations:
        People:
            local: person_user_ref
            foreign: id

PeopleAddresses:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        person_user_ref: { type: integer, notnull: true}
        tag: { type: string, notnull: true, default:''}
        entry: { type: string }
        po_box: { type: string }
        extended_address: { type: string }
        locality: { type: string, notnull:true }
        region: { type: string }
        zip_code: { type: string }
        country: { type: string, notnull:true }
    relations:
        People:
            local: person_user_ref
            foreign: id

UsersComm:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        person_user_ref: { type: integer, notnull: true}
        comm_type: { type: string, notnull: true, default: 'phone/fax' }
        entry: { type: string, notnull: true}
        tag: { type: string, notnull: true, default: ''}
    relations:
        Users:
            local: person_user_ref
            foreign: id

UsersAddresses:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        person_user_ref: { type: integer, notnull: true}
        tag: { type: string, notnull: true, default: ''}
        entry: { type: string }
        organization_unit: { type: string }
        person_user_role: { type: string }
        po_box: { type: string }
        extended_address: { type: string }
        locality: { type: string, notnull:true }
        region: { type: string }
        zip_code: { type: string }
        country: { type: string, notnull:true }
    relations:
        Users:
            local: person_user_ref
            foreign: id

UsersLoginInfos:
    columns:
        id: { type: integer, notnull: true, primary:true}
        user_ref: { type: integer, notnull: true}
        login_type: { type: string, notnull: true, default: local}
        user_name: { type: string }
        password: { type: string }
        login_system: { type: string}
        renew_hash: {type: string}
        last_seen: { type: string}
    relations:
        User:
            class: Users
            local: user_ref
            foreign: id

Collections:
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        collection_type: { type: enum, notnull: true, default: mix, values: [mix, observation, physical] }
        code: { type: string, notnull: true}
        name: { type: string, notnull: true}
        name_indexed: { type: string}
        institution_ref: { type: integer, notnull: true}
        main_manager_ref: { type: integer, notnull: true}
        staff_ref: { type: integer}
        parent_ref: { type: integer}
        path: { type: string, notnull: true, default: '/'}
        code_auto_increment: { type: boolean, notnull: true, default: false}
        code_auto_increment_for_insert_only: { type: boolean, notnull: true, default: true}
        code_last_value: { type: integer, notnull: true, default: 0}
        code_prefix: { type: string}
        code_prefix_separator: { type: string}
        code_suffix: { type: string}
        code_suffix_separator: { type: string}
        code_specimen_duplicate: { type: boolean, notnull: true, default: false}
        is_public: { type:boolean, notnull:true,default:true}
        code_mask: { type: string}
        #ftheeten 2018 08 08
        allow_duplicates: { type:boolean, notnull:true,default:false}
        code_ai_inherit: { type: boolean, notnull: true, default: false}
        #JMHerpers 2019 05 07
        nagoya: { type: string, notnull: true, default: 'not defined'}
        preferred_taxonomy: {type: integer}
        uid : {type: string}
    relations:
        Institution:
            class: People
            local: institution_ref
            foreign: id
        Manager:
            class: Users
            local: main_manager_ref
            foreign: id
        Staff:
            class: Users
            local: staff_ref
            foreign: id
        Parent:
            class: Collections
            local: parent_ref
            foreign: id

CollectionsRights:
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        collection_ref: { type: integer, notnull: true }
        user_ref: { type: integer, notnull: true}
        db_user_type: { type: integer, notnull: true, default:1 }
    relations:
        Collections:
            local: collection_ref
            foreign: id
        Users:
            local: user_ref
            foreign: id


UsersTracking:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer, notnull: true}
        user_ref: { type: integer, notnull: true}
        action: { type: string, notnull: true, default: insert}
        modification_date_time: { type: string, notnull: true }
        old_value: { type: string}
        new_value: { type: string}
    relations:
        Users:
            local: user_ref
            foreign: id

InformativeWorkflow:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        record_id: { type: integer, notnull: true}
        referenced_relation: { type: string, notnull: true}
        user_ref: { type: integer}
        formated_name: {type: string}
        status: {type: string}
        modification_date_time : {type:string, notnull: true }
        comment : { type:string}
        is_last : { type:boolean, notnull: true }
    relations:
        Users:
            local: user_ref
            foreign: id

CollectionMaintenance:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        record_id: { type: integer, notnull: true}
        referenced_relation: { type: string, notnull: true}
        people_ref: { type: integer, notnull: true}
        category: { type: string, notnull: true, default: action}
        action_observation: { type: string, notnull: true}
        description: { type: string }
        description_indexed: { type: string }
        modification_date_time: { type: string, notnull: true }
        modification_date_mask : { type: integer, notnull: true, default: 0}
    relations:
        People:
            local: people_ref
            foreign: id

MySavedSearches:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        user_ref: { type: integer, notnull: true }
        name: { type: string, notnull: true }
        search_criterias: { type: string, notnull: true}
        favorite: { type: boolean, notnull: true, default: false}
        is_only_id: { type: boolean, notnull: true, default: false}
        modification_date_time: { type: string, notnull: true }
        visible_fields_in_result: { type: string, notnull: true}
        subject: { type: string, notnull: true}
        query_where: { type: string, notnull: true}
        query_parameters: { type: string, notnull: true}
    relations:
        User:
            class: Users
            local: user_ref
            foreign: id

MyWidgets:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        user_ref: { type: integer, notnull: true}
        category: { type: string, notnull: true, default: board_widget}
        group_name: { type: string, notnull: true}
        order_by: { type: integer, notnull: true, default:1 }
        col_num: { type: integer, notnull: true, default:1 }
        mandatory: { type: boolean, notnull: true, default: false}
        visible: { type: boolean, notnull: true, default: true}
        is_available: { type: boolean, notnull: true, default: false}
        opened: { type: boolean, notnull: true, default: true}
        color: { type: string, default:'#5BAABD'}
        #is_available: { type: boolean, default: false}
        icon_ref: { type: integer}
        title_perso: { type: string}
        collections: { type: string }
        all_public: {type: boolean, notnull:true, default:false}
    relations:
        User:
            class: Users
            local: user_ref
            foreign: id
Taxonomy:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        name: { type: string, notnull: true}
        name_indexed: { type: string}
        level_ref: { type: integer, notnull: true}
        status: { type: string, notnull: true, default: valid}
        path: { type: string, notnull: false, default: '/'}
        parent_ref: { type: integer}
        extinct: { type: boolean, notnull: true, default: false}
        #2017 03 03
        is_reference_taxonomy: {type: boolean, notnull: true, default: false}
        #reference_path: { type: string, notnull: true, default: '/'}
        #source: {type: string, notnull: false }
        metadata_ref : {type: integer}
         #ftheeten 2017 08 XX
        sensitive_info_withheld : {type: boolean}
        #JMHerpers 2019 05 07
        cites: { type: boolean, notnull: false}
    relations:
        Parent:
            class: Taxonomy
            local: parent_ref
            foreign: id
        Level:
            class: CatalogueLevels
            local: level_ref
            foreign: id
        TaxonomyMetadata:
            class: TaxonomyMetadata
            local: metadata_ref
            foreign: id


#ftheeten 2017 07 17
TaxonomyMetadata:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        creation_date: { type: string}
        creation_date_mask: { type: integer, notnull: true, default:0}
        import_ref: {type: integer}
        taxonomy_name: {type: string, notnull: true}
        definition: {type: string}
        is_reference_taxonomy: {type: boolean, notnull: true, default: false}
        source: {type: string}
        url_website: {type: string}
        url_webservice: {type: string}

ClassificationKeywords:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer, notnull: true}
        keyword_type: {type: string, notnull:true, default: name}
        keyword: {type:string, notnull:true}

ClassificationSynonymies:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer, notnull: true}
        group_id: { type: integer, notnull: true}
        group_name: {type:string, notnull:true}
        is_basionym: { type: boolean, default: false}
        order_by: { type: integer, notnull: true, default:0}

Chronostratigraphy:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        name: { type: string, notnull: true}
        name_indexed: { type: string}
        level_ref: { type: integer, notnull: true}
        status: { type: string, notnull: true, default: valid}
        local_naming: { type: boolean, notnull: true, default: false}
        color: { type: string}
        path: { type: string, notnull: false, default: '/'}
        parent_ref: { type: integer}
        lower_bound: { type: decimal, length: 10, scale: 3}
        upper_bound: { type: decimal, length: 10, scale: 3}
        metadata_ref : {type: integer}
    relations:
        Parent:
            class: Chronostratigraphy
            local: parent_ref
            foreign: id
        Level:
            class: CatalogueLevels
            local: level_ref
            foreign: id
        TaxonomyMetadata:
            class: TaxonomyMetadata
            local: metadata_ref
            foreign: id


Lithostratigraphy:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        name: { type: string, notnull: true}
        name_indexed: { type: string}
        level_ref: { type: integer, notnull: true}
        status: { type: string, notnull: true, default: valid}
        local_naming: { type: boolean, notnull: true, default: false}
        color: { type: string}
        path: { type: string, notnull: false, default: '/'}
        parent_ref: { type: integer}
        #2019 03 06
        import_ref: { type: integer}
        metadata_ref : {type: integer}
    relations:
        Parent:
            class: Lithostratigraphy
            local: parent_ref
            foreign: id
        Level:
            class: CatalogueLevels
            local: level_ref
            foreign: id
        TaxonomyMetadata:
            class: TaxonomyMetadata
            local: metadata_ref
            foreign: id


Mineralogy:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        name: { type: string, notnull: true}
        name_indexed: { type: string}
        level_ref: { type: integer, notnull: true}
        status: { type: string, notnull: true, default: valid}
        local_naming: { type: boolean, notnull: true, default: false}
        color: { type: string}
        path: { type: string, notnull: false, default: '/'}
        parent_ref: { type: integer}
        code: { type: string, notnull: true}
        classification: { type: string, notnull: true, default: strunz}
        formule: { type: string }
        formule_indexed: { type: string }
        cristal_system: { type: string }
        metadata_ref : {type: integer}
    relations:
        Parent:
            class: Mineralogy
            local: parent_ref
            foreign: id
        Level:
            class: CatalogueLevels
            local: level_ref
            foreign: id
        TaxonomyMetadata:
            class: TaxonomyMetadata
            local: metadata_ref
            foreign: id


Lithology:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        name: { type: string, notnull: true}
        name_indexed: { type: string}
        level_ref: { type: integer, notnull: true}
        status: { type: string, notnull: true, default: valid}
        local_naming: { type: boolean, notnull: true, default: false}
        color: { type: string}
        path: { type: string, notnull: false, default: '/'}
        parent_ref: { type: integer}
        metadata_ref : {type: integer}
    relations:
        Parent:
            class: Lithology
            local: parent_ref
            foreign: id
        Level:
            class: CatalogueLevels
            local: level_ref
            foreign: id
        TaxonomyMetadata:
            class: TaxonomyMetadata
            local: metadata_ref
            foreign: id           

Igs:
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        ig_num: { type: string, notnull: true}
        ig_num_indexed: { type: string, notnull: true}
        ig_date_mask: { type: integer, notnull: true, default:0}
        ig_date: { type: string, default:'0001-01-01'}

Specimens:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        category: { type: string, notnull: true, default: physical }
        collection_ref: { type: integer, notnull: true }
        expedition_ref: { type: integer}
        gtu_ref: { type: integer}
        taxon_ref: { type: integer}
        litho_ref: { type: integer}
        chrono_ref: { type: integer}
        lithology_ref: { type: integer}
        mineral_ref: { type: integer}
        acquisition_category: { type: string, default: expedition}
        acquisition_date_mask: { type: integer, notnull: true, default:0}
        acquisition_date: { type: string, default: '0001-01-01'}
        station_visible: { type: boolean, default: true}
        ig_ref: { type: integer}

        spec_coll_ids: { type:string}
        spec_ident_ids: { type:string}
        spec_don_sel_ids: { type:string}

        collection_type: { type: string}
        collection_code: { type: string}
        collection_name: { type: string}
        collection_is_public: {type: boolean}
        collection_parent_ref: { type: integer}
        collection_path: { type: string}
        expedition_name: { type: string}
        expedition_name_indexed: { type: string}
        station_visible: { type: boolean}
        gtu_ref: { type: integer, notnull: true}
        gtu_code: { type: string}
        #gtu_from_date_mask: { type: integer }
        #gtu_from_date: { type: string}
        #gtu_to_date_mask: { type: integer }
        #gtu_to_date: { type: string}
        gtu_from_date_mask: { type: integer, notnull: true, default:0}
        gtu_from_date: { type: string, notnull: true, default: '0001-01-01'}
        gtu_to_date_mask: { type: integer, notnull: true, default:0}
        gtu_to_date: { type: string, notnull: true, default: '2038-12-31'}
        
        #ftheeten 2018 10 05
        gtu_others_tag_value: { type: string}
        gtu_tag_values_indexed: { type: string}
        gtu_country_tag_indexed: { type: string}
        gtu_country_tag_value: { type: string}
        gtu_location: { type: string}
        gtu_elevation: { type: float }
        gtu_elevation_accuracy: { type: float }
        taxon_name:  { type: string}
        taxon_name_indexed: { type: string}
        taxon_level_ref: { type: integer}
        taxon_level_name: { type: string}
        taxon_status: { type: string}
        taxon_path: { type: string}
        taxon_parent_ref: { type: integer}
        taxon_extinct: { type: boolean}
        litho_name: { type: string}
        litho_name_indexed: { type: string}
        litho_level_ref: { type: integer}
        litho_level_name: { type: string}
        litho_status: { type: string}
        litho_local: { type: boolean}
        litho_color: { type: string}
        litho_path: { type: string}
        litho_parent_ref: { type: integer}
        chrono_name: { type: string}
        chrono_name_indexed: { type: string}
        chrono_level_ref: { type: integer}
        chrono_level_name: { type: string}
        chrono_status: { type: string}
        chrono_local: {type: boolean}
        chrono_color: {type: string}
        chrono_path: { type: string}
        chrono_parent_ref: { type: integer}
        lithology_name: { type: string}
        lithology_name_indexed: { type: string}
        lithology_level_ref: { type: integer}
        lithology_level_name: { type: string}
        lithology_status: { type: string}
        lithology_local: { type: boolean}
        lithology_color: { type: string}
        lithology_path: { type: string}
        lithology_parent_ref: { type: integer}
        mineral_name: { type: string}
        mineral_name_indexed: { type: string}
        mineral_level_ref: { type: integer}
        mineral_level_name: { type: string}
        mineral_status: { type: string}
        mineral_local: { type: boolean}
        mineral_color: { type: string}
        mineral_path: { type: string}
        mineral_parent_ref: { type: integer}
        ig_num: { type: string}
        ig_num_indexed: { type: string}
        ig_date_mask: { type: integer }

        type: { type: string, notnull: true, default: specimen}
        type_group: { type: string, notnull: true, default: specimen}
        type_search: { type: string, notnull: true, default: specimen}
        sex: { type: string, notnull: true, default: undefined}
        stage: { type: string, notnull: true, default: undefined}
        state: { type: string, notnull: true, default: 'not applicable'}
        social_status: { type: string, notnull: true, default: 'not applicable'}
        rock_form: { type: string, notnull: true, default: 'not applicable'}

        specimen_part: { type: string, notnull: true, default: specimen}
        complete: { type: boolean, notnull: true, default: true}
        institution_ref: {type: integer}
        building: { type: string}
        floor: { type: string}
        room: { type: string}
        row: { type: string}
        col: { type: string}
        shelf: { type: string}
        container: { type: string}
        sub_container: { type: string}
        container_type: { type: string, notnull: true, default: container}
        sub_container_type: { type: string, notnull: true, default: container}
        container_storage: { type: string, notnull: true, default: dry}
        sub_container_storage: { type: string, notnull: true, default: dry}
        surnumerary: { type: boolean, notnull: true, default: false}
        specimen_status: { type: string, notnull: true, default: 'good state'}
        specimen_count_min: { type: integer, notnull: true, default:1}
        specimen_count_max: { type: integer, notnull: true, default:1}
        object_name: { type: string}
        object_name_indexed: { type: string}
        #2019 05 02
        specimen_count_min: { type: integer, notnull: true, default:1}
        specimen_count_max: { type: integer, notnull: true, default:1}
        #ftheeten 2016 06 22
        specimen_count_males_min: { type: integer}
        specimen_count_males_max: { type: integer}
        #ftheeten 2016 06 22
        specimen_count_females_min: { type: integer}
        specimen_count_females_max: { type: integer}
        #ftheeten 2016 06 22
        specimen_count_juveniles_min: { type: integer}
        specimen_count_juveniles_max: { type: integer}
        specimen_creation_date: { type: string}
        import_ref: {type: integer}
        #JMHerpers 2019 05 07
        nagoya: { type: string, notnull: true, default: 'not defined'}
    relations:
        Collections:
            local: collection_ref
            foreign: id
        Expeditions:
            local: expedition_ref
            foreign: id
        Gtu:
            local: gtu_ref
            foreign: id
        Taxonomy:
            local: taxon_ref
            foreign: id
        Lithostratigraphy:
            local: litho_ref
            foreign: id
        Chronostratigraphy:
            local: chrono_ref
            foreign: id
        Lithology:
            local: lithology_ref
            foreign: id
        Mineralogy:
            local: mineral_ref
            foreign: id
        Igs:
            class: Igs
            local: ig_ref
            foreign: id
        Institution:
            class: Institutions
            local: institution_ref
            foreign: id
        CollectingMethods:
            class: CollectingMethods
            refClass: SpecimensMethods
            local: specimen_ref
            foreign: collecting_method_ref
        CollectingTools:
            class: CollectingTools
            refClass: SpecimensTools
            local: specimen_ref
            foreign: collecting_tool_ref
        SubComments:
            class: SubComments
            local: id
            foreign: record_id
        SubProperties:
            class: SubProperties
            local: id
            foreign: record_id
        #ftheeten 2018 12 11
        DoctrineTaxonomicIdentifications:
            class: DoctrineTaxonomicIdentifications
            local: id
            foreign: record_id
        #ftheeten 2018 12 11
        TemporalInformation:
            class : TemporalInformation
            local: id
            foreign: specimen_ref
        #ftheeten 2019 01 28
        Tags:
            class: Tags
            local: gtu_ref
            foreign: gtu_ref
            
IgsSearch:
    tableName: specimens
    columns:
        ig_num: { type: string}
        ig_num_indexed: { type: string}
        ig_date_mask: { type: integer }
        ig_ref: { type: integer, primary: true, autoincrement: true}
        expedition_name: { type: string}
        expedition_name_indexed: { type: string}
        expedition_ref: { type: integer}

CollectingMethods:
    tableName: collecting_methods
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        method: { type:string, notnull: true }
        method_indexed: { type: string}
    relations:
        Specimens:
            class: Specimens
            refClass: SpecimensMethods
            local: collecting_method_ref
            foreign: specimen_ref

CollectingTools:
    tableName: collecting_tools
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        tool: { type:string, notnull: true }
        tool_indexed: { type: string}
    relations:
        Specimens:
            class: Specimens
            refClass: SpecimensTools
            local: collecting_tool_ref
            foreign: specimen_ref

Codes:
  columns:
        id: { type: integer, primary: true, autoincrement: true}
        referenced_relation : { type: string, notnull: true}
        record_id: { type: integer, notnull: true}
        code_category: { type: string, notnull: true, default: main}
        code_prefix: { type: string}
        code_prefix_separator: { type: string}
        code: { type: string}
        code_suffix: { type: string}
        code_suffix_separator: { type: string}
        full_code_indexed: { type: string}
        code_date: { type: string}
        code_date_mask: { type: integer, notnull: true, default:0}

Preferences:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        pref_key: { type: string, notnull: true}
        pref_value: { type: string, notnull: true}
        user_ref: { type: integer, notnull: true}
    relations:
        User:
            class: Users
            local: user_ref
            foreign: id

Insurances:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer, notnull: true}
        insurance_value: { type: decimal, length: 16, scale: 2, notnull: true}
        insurance_currency: { type: string, notnull: true, default: '€'}
        insurer_ref: { type: integer}
        date_from: { type: string, notnull: true, default: '0001-01-01'}
        date_from_mask: { type: integer, notnull: true, default:0}
        date_to: { type: string, notnull: true, default: '2038-12-31'}
        date_to_mask: { type: integer, notnull: true, default:0}
        contact_ref: { type: integer}
    relations:
        People:
            local: insurer_ref
            foreign: id
        Contact:
            class: People
            local: contact_ref
            foreign: id

SpecimensRelationships:
    columns:
        specimen_ref: { type: integer, notnull: true}
        taxon_ref: { type: integer}
        mineral_ref: { type: integer}
        specimen_related_ref: { type: integer}
        relationship_type: { type: string, notnull: true, default: 'host'}
        unit_type: { type: string, notnull: true, default: 'specimens'}
        quantity: { type: decimal, length: 16, scale: 2}
        unit: { type: string, default: '%'}
        institution_ref: { type: integer}
        source_name: { type: string}
        source_id: { type: string}
    relations:
        Specimen:
            local: specimen_ref
            class: Specimens
            foreign: id
        SpecimenRelated:
            local: specimen_related_ref
            class: Specimens
            foreign: id
        Taxonomy:
            local: taxon_ref
            foreign: id
        Mineralogy:
            local: mineral_ref
            foreign: id
        Institutions:
            local: institution_ref
            foreign: id


SpecimensCodes:
    tableName: codes
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        referenced_relation : { type: string, notnull: true, default: specimens}
        record_id: { type: integer, notnull: true}
        code_category: { type: string, notnull: true, default: main}
        code_prefix: { type: string}
        code_prefix_separator: { type: string}
        code: { type: string}
        code_suffix: { type: string}
        code_suffix_separator: { type: string}
        full_code_indexed: { type: string}
        code_date: { type: string}
        code_date_mask: { type: integer, notnull: true, default:0}
    relations:
        Specimens:
            local: record_id
            foreign: id

SpecimensMethods:
    tableName: specimen_collecting_methods
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        specimen_ref: { type: integer, notnull: true}
        collecting_method_ref: { type: integer, notnull: true}
    relations:
        Specimens:
          local: specimen_ref
          foreign: id
        CollectingMethods:
          local: collecting_method_ref
          foreign: id

SpecimensTools:
    tableName: specimen_collecting_tools
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        specimen_ref: { type: integer, notnull: true}
        collecting_tool_ref: { type: integer, notnull: true}
    relations:
        Specimens:
          local: specimen_ref
          foreign: id
        CollectingTools:
          local: collecting_tool_ref
          foreign: id

FlatDict:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        dict_field: { type: string, notnull: true}
        dict_value: { type: string, notnull: true}

Imports:
    tableName: imports
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        filename: { type: string, notnull: true}
        user_ref: {type:integer, notnull: true}
        format : {type:string,notnull: true}
        collection_ref: { type: integer, notnull: true}
        state: {type:string,notnull:true, default:'to_be_loaded'}
        created_at: { type: string, notnull: true}
        updated_at: { type: string, notnull: true}
        initial_count: {type:integer, notnull: true}
        is_finished: {type:boolean, notnull: true,default:false}
        errors_in_import: {type: string}
        template_version: {type: string}
        exclude_invalid_entries: {type: boolean, notnull: true, default: false}
        #ftheeten 2017 07 06
        creation_date: { type: string}
        creation_date_mask: { type: integer, default:0}
        #ftheeten 2017 08 28
        working : {type:boolean}
        #ftheeten 2017 09 13
        mime_type: {type: string}
        #ftheeten 2018 07 15
        gtu_include_date: {type: boolean, default: false }
        #ftheeten 2018 07 15
        gtu_tags_in_merge: {type: boolean, default: false }
        #ftheeten 2018 07 15
        sensitive_information_withheld: {type: boolean, default: false }
        #ftheeten 2018 07 26
        source_database: {type: string}
        #ftheeten 2017 09 13
        taxonomy_kingdom: {type: string}
        #ftheeten 2017 08 02
        specimen_taxonomy_ref:  {type:integer}
        #ftheeten 2018 09 02
        history_taxonomy: {type: string}
        #2019 03 01
        collection_ref_for_gtu : { type: integer, notnull: true}
        enforce_code_unicity : { type:boolean}
    relations:
        Collections:
            local: collection_ref
            foreign: id
        Users:
            local: user_ref
            foreign: id

Staging:
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        import_ref: { type: integer, notnull: true}
        category: { type: string}
        expedition_ref: { type: integer}
        expedition_name: { type: string}
        expedition_from_date: {type: string}
        expedition_from_date_mask: { type: integer}
        expedition_to_date: {type: string}
        expedition_to_date_mask: { type: integer}
        station_visible: { type: boolean}
        gtu_ref: { type: integer}
        gtu_code: { type: string}
        gtu_from_date_mask: { type: integer }
        gtu_from_date: { type: string}
        gtu_to_date_mask: { type: integer }
        gtu_to_date: { type: string }
        gtu_latitude: { type: float }
        gtu_longitude: { type: float }
        gtu_lat_long_accuracy: { type: float }
        gtu_elevation: { type: float }
        gtu_elevation_accuracy: { type: float }
        taxon_ref: { type: integer}
        taxon_name:  { type: string}
        taxon_level_ref: { type: integer}
        taxon_level_name: { type: string}
        taxon_status: { type: string}
        taxon_extinct: { type: boolean}
        taxon_parents: { type: string}
        litho_ref: { type: integer}
        litho_name: { type: string}
        litho_level_ref: { type: integer}
        litho_level_name: { type: string}
        litho_status: { type: string}
        litho_local: { type: boolean}
        litho_color: { type: string}
        litho_parents: { type: string}
        chrono_ref: { type: integer}
        chrono_name: { type: string}
        chrono_level_ref: { type: integer}
        chrono_level_name: { type: string}
        chrono_status: { type: string}
        chrono_local: {type: boolean}
        chrono_color: {type: string}
        chrono_lower_bound: { type: decimal, length: 10, scale: 3}
        chrono_upper_bound: { type: decimal, length: 10, scale: 3}
        chrono_parents: { type: string}
        lithology_ref: { type: integer}
        lithology_name: { type: string}
        lithology_level_ref: { type: integer}
        lithology_level_name: { type: string}
        lithology_status: { type: string}
        lithology_local: { type: boolean}
        lithology_color: { type: string}
        lithology_parents: { type: string}
        mineral_ref: { type: integer}
        mineral_name: { type: string}
        mineral_level_ref: { type: integer}
        mineral_level_name: { type: string}
        mineral_status: { type: string}
        mineral_local: { type: boolean}
        mineral_color: { type: string}
        mineral_parents: { type: string}
        mineral_classification: { type: string}
        ig_ref: { type: integer}
        ig_num: { type: string}
        ig_date_mask: { type: integer }
        ig_date: { type: string}
        acquisition_category: { type: string}
        acquisition_date_mask: { type: integer }
        acquisition_date: { type: string}
        individual_type: {type: string}
        individual_sex:  {type: string}
        individual_state: {type: string}
        individual_stage: {type: string}
        individual_social_status: {type: string}
        individual_rock_form: {type: string}
        individual_count_min: {type: integer }
        individual_count_max: {type: integer }
        part: {type: string }
        institution_ref: {type: integer}
        institution_name: {type: string}
        building: {type: string }
        floor: {type: string }
        room: {type: string }
        row: {type: string }
        col: { type: string }
        shelf: {type: string }
        container_type: {type: string }
        container_storage: {type: string }
        container: {type: string }
        sub_container_type: {type: string }
        sub_container_storage: {type: string}
        sub_container: {type: string }
        part_count_min: {type: integer }
        part_count_max: {type:integer}
        object_name:  { type: string}
        specimen_status: {type: string}
        status: {type: string}
        complete: {type: boolean}
        surnumerary: {type: boolean}
        #ftheeten 2016 06 22
        part_count_males_min: { type: integer}
        part_count_males_max: { type: integer}
        #ftheeten 2016 06 22
        part_count_females_min: { type: integer}
        part_count_females_max: { type: integer}
        #ftheeten 2016 06 22
        part_count_juveniles_min: { type: integer}
        part_count_juveniles_max: { type: integer}
        #ftheeten 2017 08 02
        specimen_taxonomy_ref:  {type:integer}
    relations:
        Import:
            local: import_ref
            foreign: id
            class: Imports
        Parent:
            class: Staging
            local: parent_ref
            foreign: id
StagingInfo:
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        staging_ref: { type: integer, notnull: true}
        referenced_relation : {type: string, notnull: true}
    relations:
        Staging:
            local: staging_ref
            foreign: id
            class: Staging

StagingRelationship:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        record_id : { type: integer, notnull: true }
        referenced_relation : {type: string, notnull: true }
        relationship_type: { type: string, notnull: true, default: 'host'}
        staging_related_ref : { type: integer }
        taxon_ref : { type: integer }
        mineral_ref : { type: integer }
        institution_ref : { type:integer }
        institution_name : { type:string }
        source_name : { type:string }
        source_id : { type:string }
        unit_type: { type: string, notnull: true, default: 'specimens'}
        quantity: { type: decimal, length: 16, scale: 2}
        unit: { type: string, default: '%'}

StagingTagGroups:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        staging_ref: { type: integer, notnull: true}
        group_name: {type: string, notnull: true}
        sub_group_name:  { type: string, notnull: true }
        tag_value: { type: string, notnull: true}
    relations:
        Staging:
            local: staging_ref
            foreign: id
            class: Staging

StagingPeople:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer}
        people_type: {  type: string, notnull: true , default: author }
        people_sub_type: {  type: string, notnull: true }
        order_by: { type: integer, notnull: true, default: 1}
        people_ref: { type: integer, notnull: true}
        formated_name: { type: string}
    relations:
        People:
            local: people_ref
            foreign: id

StagingMethods:
    tableName: staging_collecting_methods
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        staging_ref: { type: integer, notnull: true}
        collecting_method_ref: { type: integer, notnull: true}
    relations:
        Staging:
          local: staging_ref
          foreign: id
        CollectingMethods:
          local: collecting_method_ref
          foreign: id

StagingCatalogue:
    tableName: staging_catalogue
    columns:
        id: { type: integer, primary: true, autoincrement: true}
        import_ref: {type:integer, notnull:true}
        name: { type: string, notnull: true}
        level_ref: { type: integer, notnull: true}
        parent_ref: { type: integer}
        catalogue_ref: { type: integer}
        #ftheeten 2017 07 06
        is_reference_taxonomy: {type: boolean, notnull: true, default: true}
        source_taxonomy: {type: string, notnull: false}
        #ftheeten 2018 06 12
        name_cluster : {type: integer}
        #ftheeten 2019 02 11
        imported: {type: boolean, notnull: true, default: false}
        #ftheeten 2019 02 14
        import_exception  : {type : string}
        #ftheeten 2019 02 14
        staging_hierarchy  : {type : string}
        #ftheeten 2019 02 14
        darwin_hierarchy  : {type : string}
        #ftheeten 2019 02 14
        parent_ref_internal  : {type : integer}
        #ftheeten 2019 02 14
        parent_updated  : {type : boolean}        
    relations:
        Parent:
            class: StagingCatalogue
            local: parent_ref
            foreign: id
        Import:
            class: Imports
            local: import_ref
            foreign: id

Multimedia:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer}
        is_digital: {type: boolean, notnull:true, default: true}
        type: { type: string, notnull: true, default: 'image'}
        sub_type: { type: string }
        title: { type: string, notnull: true}
        description: { type: string, notnull: true, default:''}
        uri: { type: string }
        filename: : { type: string }
        search_indexed: { type: string }
        creation_date: { type: string, notnull: true, default: '0001-01-01'}
        creation_date_mask: { type: integer, notnull: true, default:0}
        mime_type: { type: string }
        visible: {type:boolean, notnull: true, default: true}
        publishable: {type:boolean, notnull: true, default: true}
        extracted_info: { type: string }

# This sub class is used for linking loans with actors
LoanActors:
    inheritance:
        extends: CataloguePeople
        type: column_aggregation
        keyField: referenced_relation
        keyValue: loans

Loans:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        name: { type: string, notnull: true, default:''}
        description: { type: string, notnull: true, default:''}
        search_indexed: { type: string}
        from_date: { type: string}
        to_date: { type: string}
        extended_to_date: { type: string}
    relations:
        CataloguePeople:
            class: LoanActors
            local: id
            foreign: record_id
            type: many

LoanItems:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        loan_ref: { type: integer, notnull: true}
        ig_ref: { type: integer}
        from_date: { type: string}
        to_date: { type: string}
        specimen_ref: { type: integer}
        details: { type: string, notnull: true, default:''}
    relations:
        Loan:
            local: loan_ref
            foreign: id
            class: Loans
        Ig:
            local: ig_ref
            foreign: id
            class: Igs
        DarwinParts:
            local: specimen_ref
            foreign: id
            class: Specimens

LoanRights:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        loan_ref: { type: integer, notnull: true}
        user_ref: { type: integer, notnull: true}
        has_encoding_right: { type: boolean, notnull: true, default:false}
    relations:
        Loan:
            local: loan_ref
            foreign: id
            class: Loans
        User:
            local: user_ref
            foreign: id
            class: Users

LoanStatus:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        loan_ref: { type: integer, notnull: true}
        user_ref: { type: integer, notnull: true}
        status: {type: string}
        modification_date_time : {type:string, notnull: true }
        comment : { type:string}
        is_last : { type:boolean, notnull: true }
    relations:
        Loan:
            local: loan_ref
            foreign: id
            class: Loans
        Users:
            local: user_ref
            foreign: id

Bibliography:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        title: { type: string, notnull: true}
        title_indexed: {type: string}
        type : {type:string, notnull: true }
        abstract : { type:string }
        year : { type:integer}

CatalogueBibliography:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        referenced_relation: { type: string, notnull: true}
        record_id: { type: integer, notnull: true}
        bibliography_ref: { type: integer, notnull: true}
    relations:
        Bibliography:
            local: bibliography_ref
            foreign: id

MultimediaTodelete:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        uri: { type: string, notnull: true}

Reports:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        user_ref: { type:integer, notnull: true }
        name: { type: string, notnull:true }
        uri: { type: string }
        lang: { type: string(2), notnull: true }
        format: { type: string, notnull: true, default: 'csv' }
        parameters: { type: string}
        comment: { type: string}
    relations:
        Users:
            local: user_ref
            foreign: id
            
SpecimensMaincodes:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        code_main: { type: varchar }
        category: { type: string, notnull: true, default: physical }
        collection_ref: { type: integer, notnull: true }
        expedition_ref: { type: integer}
        gtu_ref: { type: integer}
        taxon_ref: { type: integer}
        litho_ref: { type: integer}
        chrono_ref: { type: integer}
        lithology_ref: { type: integer}
        mineral_ref: { type: integer}
        acquisition_category: { type: string, default: expedition}
        acquisition_date_mask: { type: integer, notnull: true, default:0}
        acquisition_date: { type: string, default: '0001-01-01'}
        station_visible: { type: boolean, default: true}
        ig_ref: { type: integer}

        spec_coll_ids: { type:string}
        spec_ident_ids: { type:string}
        spec_don_sel_ids: { type:string}

        collection_type: { type: string}
        collection_code: { type: string}
        collection_name: { type: string}
        collection_is_public: {type: boolean}
        collection_parent_ref: { type: integer}
        collection_path: { type: string}
        expedition_name: { type: string}
        expedition_name_indexed: { type: string}
        station_visible: { type: boolean}
        gtu_ref: { type: integer, notnull: true}
        gtu_code: { type: string}
        gtu_from_date_mask: { type: integer }
        gtu_from_date: { type: string}
        gtu_to_date_mask: { type: integer }
        gtu_to_date: { type: string}
        gtu_tag_values_indexed: { type: string}
        gtu_country_tag_indexed: { type: string}
        gtu_country_tag_value: { type: string}
        gtu_location: { type: string}
        gtu_elevation: { type: float }
        gtu_elevation_accuracy: { type: float }
        taxon_name:  { type: string}
        taxon_name_indexed: { type: string}
        taxon_level_ref: { type: integer}
        taxon_level_name: { type: string}
        taxon_status: { type: string}
        taxon_path: { type: string}
        taxon_parent_ref: { type: integer}
        taxon_extinct: { type: boolean}
        litho_name: { type: string}
        litho_name_indexed: { type: string}
        litho_level_ref: { type: integer}
        litho_level_name: { type: string}
        litho_status: { type: string}
        litho_local: { type: boolean}
        litho_color: { type: string}
        litho_path: { type: string}
        litho_parent_ref: { type: integer}
        chrono_name: { type: string}
        chrono_name_indexed: { type: string}
        chrono_level_ref: { type: integer}
        chrono_level_name: { type: string}
        chrono_status: { type: string}
        chrono_local: {type: boolean}
        chrono_color: {type: string}
        chrono_path: { type: string}
        chrono_parent_ref: { type: integer}
        lithology_name: { type: string}
        lithology_name_indexed: { type: string}
        lithology_level_ref: { type: integer}
        lithology_level_name: { type: string}
        lithology_status: { type: string}
        lithology_local: { type: boolean}
        lithology_color: { type: string}
        lithology_path: { type: string}
        lithology_parent_ref: { type: integer}
        mineral_name: { type: string}
        mineral_name_indexed: { type: string}
        mineral_level_ref: { type: integer}
        mineral_level_name: { type: string}
        mineral_status: { type: string}
        mineral_local: { type: boolean}
        mineral_color: { type: string}
        mineral_path: { type: string}
        mineral_parent_ref: { type: integer}
        ig_num: { type: string}
        ig_num_indexed: { type: string}
        ig_date_mask: { type: integer }

        type: { type: string, notnull: true, default: specimen}
        type_group: { type: string, notnull: true, default: specimen}
        type_search: { type: string, notnull: true, default: specimen}
        sex: { type: string, notnull: true, default: undefined}
        stage: { type: string, notnull: true, default: undefined}
        state: { type: string, notnull: true, default: 'not applicable'}
        social_status: { type: string, notnull: true, default: 'not applicable'}
        rock_form: { type: string, notnull: true, default: 'not applicable'}

        specimen_part: { type: string, notnull: true, default: specimen}
        complete: { type: boolean, notnull: true, default: true}
        institution_ref: {type: integer}
        building: { type: string}
        floor: { type: string}
        room: { type: string}
        row: { type: string}
        col: { type: string}
        shelf: { type: string}
        container: { type: string}
        sub_container: { type: string}
        container_type: { type: string, notnull: true, default: container}
        sub_container_type: { type: string, notnull: true, default: container}
        container_storage: { type: string, notnull: true, default: dry}
        sub_container_storage: { type: string, notnull: true, default: dry}
        surnumerary: { type: boolean, notnull: true, default: false}
        specimen_status: { type: string, notnull: true, default: 'good state'}
        specimen_count_min: { type: integer, notnull: true, default:1}
        specimen_count_max: { type: integer, notnull: true, default:1}
        object_name: { type: string}
        object_name_indexed: { type: string}

    relations:
        Collections:
            local: collection_ref
            foreign: id
        Expeditions:
            local: expedition_ref
            foreign: id
        Gtu:
            local: gtu_ref
            foreign: id
        Taxonomy:
            local: taxon_ref
            foreign: id
        Lithostratigraphy:
            local: litho_ref
            foreign: id
        Chronostratigraphy:
            local: chrono_ref
            foreign: id
        Lithology:
            local: lithology_ref
            foreign: id
        Mineralogy:
            local: mineral_ref
            foreign: id
        Igs:
            class: Igs
            local: ig_ref
            foreign: id
        Institution:
            class: Institutions
            local: institution_ref
            foreign: id
        CollectingMethods:
            class: CollectingMethods
            refClass: SpecimensMethods
            local: specimen_ref
            foreign: collecting_method_ref
        CollectingTools:
            class: CollectingTools
            refClass: SpecimensTools
            local: specimen_ref
            foreign: collecting_tool_ref
        SubComments:
            class: SubComments
            local: id
            foreign: record_id
        SubProperties:
            class: SubProperties
            local: id
            foreign: record_id

#ftheeten 2018 07 26        
StagingGtu:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        import_ref:  { type: integer, notnull: true}
        pos_in_file: {type: integer}
        status: {type: string}
        date_included: {type: boolean, default: false }
        tags_merged: {type: boolean, default: false }
        sensitive_information_withheld: {type: boolean, default: false }
        gtu_ref : {type: integer}
        #'station' or 'event'
        station_type: {type: string, notnull:false, default: 'station'}
        sampling_code: {type: string, notnull:true}
        sampling_field_number: {type: string}
        event_cluster_code : {type:string}
        event_order: {type: string}
        ig_num : {type: string}
        ig_num_indexed: {type: string}
        collections: {type: string}
        collectors: {type: string}
        expeditions: {type: string }
        collection_refs: {type: string}
        collector_refs: {type: string}
        expedition_refs: {type: string}
        iso3166: {type: string}
        iso3166_subdivision: {type: string}
        countries: {type: string}
        tags: {type: string}
        tags_indexed: {type: string}
        locality_text: {type: string}
        locality_text_indexed: {type: string}
        ecology_text: {type: string}
        ecology_text_indexed: {type: string}
        coordinates_format: {type: string},
        latitude1: {type: string},
        longitude1: {type: string},
        latitude2: {type: string},
        longitude2: {type: string},
        #point, polygon, linestring, eventually bbox
        gis_type: {type: string} 
        coordinates_wkt: {type: string}
        coordinates_datum: {type: string}
        coordinates_proj_ref: {type: integer}
        coordinates_original: {type: string}
        coordinates_accuracy: { type: decimal, length: 15, scale: 4}
        coordinates_accuracy_text: { type: string}
        station_baseline_elevation: { type: decimal, length: 10, scale: 4}
        station_baseline_accuracy: { type: decimal, length: 10, scale: 4}
        sampling_elevation_start: { type: decimal, length: 10, scale: 4}
        sampling_elevation_end: { type: decimal, length: 10, scale: 4}
        sampling_elevation_accuracy: { type: decimal, length: 10, scale: 4}
        original_elevation_data: {type: string}
        sampling_depth_start: { type: decimal, length: 10, scale: 4}
        sampling_depth_end: { type: decimal, length: 10, scale: 4}
        sampling_depth_accuracy: { type: decimal, length: 10, scale: 4}
        original_depth_data: {type: string}
        #this would be in the template but in property table in SQL
        #event_notes: {type: array} 
        #event_property: {type: string}
        #event_properties_type: {type: array}
        #event_properties_lower_value: {type: array}
        #event_properties_upper_value: {type: array}
        #event_properties_unit: {type: array}
        #time mandatory if station_stype = event
        collecting_date_begin: {type: string}
        #VALUE : DAY; MONTH; YEAR
        collecting_date_begin_mask: {type: string}
        collecting_date_end: {type: string}
        collecting_date_end_mask: {type: string}
        collecting_time_begin: {type: string}        
        collecting_time_end: {type: string}
        sampling_method: {type: string }
        sampling_fixation: {type: string }
        imported: {type: boolean }
        #ftheeten 2019 02 14
        import_exception  : {type : string}
    relations:
        Import:
            local: import_ref
            foreign: id
            class: Imports
            
#ftheeten 2018 07 29            
TaxonomicIdentifications:
    inheritance:
        extends: Identifications
        type: column_aggregation
        keyField: referenced_relation
        keyValue: specimens
    relations:
        Specimens:
            local: record_id
            foreign:  id
            class: Specimens

#ftheeten 2018 07 29            
DoctrineTaxonomicIdentifications:
    columns:
        id: { type: integer, primary: true}
        record_id : { type: integer}
        taxonomic_identification: {type: string}
    relations:
        Specimens:
            local: record_id
            foreign:  id
            class: Specimens
        
#ftheeten 2018 07 29
StagingGtuTagGroups:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        staging_gtu_ref: { type: integer, notnull: true}
        group_name: {type: string, notnull: true}
        sub_group_name:  { type: string, notnull: true }
        tag_value: { type: string, notnull: true}
    relations:
        StagingGtu:
            local: staging_gtu_ref
            foreign: id
            class: StagingGtu


#ftheeten 2018 11 29
TemporalInformation:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        gtu_ref: {type: integer}
        specimen_ref: { type: integer}
        from_date_mask: { type: integer, notnull: true, default:0}
        from_date: { type: string, notnull: true, default: '0001-01-01'}
        to_date_mask: { type: integer, notnull: true, default:0}
        to_date: { type: string, notnull: true, default: '2038-12-31'}
    #relations:
    #    Specimens:
    #        local: specimen_ref
    #        foreign: id
    #        class: Specimens
    #    Gtu:
    #        local: gtu_ref
    #        foreign : id
    #        class: Gtu

#ftheeten 2018 11 29
DoctrineGtuComments:
    columns:
        id: {type:integer}
        record_id: {type:integer}
        comments: {type : string}
    relations:
        Gtu:
            local : record_id
            foreign: id
            class: Gtu


#GtuComments:
#    inheritance:
#        extends: Comments
#        type: column_aggregation
#        keyField: referenced_relation
#        keyValue: gtu
        
#GtuProperties:
#    inheritance:
#        extends: Properties
#        type: column_aggregation
#        keyField: referenced_relation
#        keyValue: gtu

        

#ftheeten 2019 01 07
DoctrineTemporalInformationGtuGroup:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        code: {type: string, notnull: true}
        gtu_from_date_mask: { type: integer, notnull: true, default:0}
        gtu_from_date: { type: string, notnull: true, default: '0001-01-01'}
        gtu_to_date_mask: { type: integer, notnull: true, default:0}
        gtu_to_date: { type: string, notnull: true, default: '2038-12-31'}
        latitude: {type: float}
        longitude: {type: float}
        location: {type: string}
        lat_long_accuracy: {type: float}
        elevation: {type: float}
        elevation_accuracy: {type: float}
        #ftheeten 2018 07 26 
        import_ref: {type: integer}
        collector_refs: {type: string}
        expedition_refs: {type: string}
        collection_ref: {type: integer}
        #ftheeten rmca 2015 06 01
        coordinates_source: {type: string}
        #ftheeten rmca 2015 06 01
        latitude_dms_degree: {type: integer}
        #ftheeten rmca 2015 06 01
        latitude_dms_minutes: {type: float}
        #ftheeten rmca 2015 06 01
        latitude_dms_seconds: {type: float}
        #ftheeten rmca 2015 06 01
        latitude_dms_direction: {type: integer}
        #ftheeten rmca 2015 06 01
        longitude_dms_degree: {type: integer}
        #ftheeten rmca 2015 06 01
        longitude_dms_minutes: {type: float}
        #ftheeten rmca 2015 06 01
        longitude_dms_seconds: {type: float}
        #ftheeten rmca 2015 06 01
        longitude_dms_direction: {type: integer}
        #ftheeten rmca 2010 02 05
        latitude_utm: {type: float}
        #ftheeten rmca 2010 02 05
        longitude_utm: {type: float}
        #ftheeten rmca 2010 02 05
        utm_zone: {type: varchar}
        location: {type: string}
        array_from_date_mask : {type : string}
        array_from_date : {type : string}
        array_to_date_mask : {type : string}
        array_to_date : {type : string}
        comments: {type : string}
        properties: {type : string}
    relations:
        Tags:
            local: id
            foreign: gtu_ref
            class: Tags

#ftheeten 2019 01 07
DoctrineTemporalInformationGtuGroupUnnest:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        code: {type: string, notnull: true}
        gtu_from_date_mask: { type: integer, notnull: true, default:0}
        gtu_from_date: { type: string, notnull: true, default: '0001-01-01'}
        gtu_to_date_mask: { type: integer, notnull: true, default:0}
        gtu_to_date: { type: string, notnull: true, default: '2038-12-31'}
        latitude: {type: float}
        longitude: {type: float}
        location: {type: string}
        lat_long_accuracy: {type: float}
        elevation: {type: float}
        elevation_accuracy: {type: float}
        #ftheeten 2018 07 26 
        import_ref: {type: integer}
        collector_refs: {type: string}
        expedition_refs: {type: string}
        collection_ref: {type: integer}
        #ftheeten rmca 2015 06 01
        coordinates_source: {type: string}
        #ftheeten rmca 2015 06 01
        latitude_dms_degree: {type: integer}
        #ftheeten rmca 2015 06 01
        latitude_dms_minutes: {type: float}
        #ftheeten rmca 2015 06 01
        latitude_dms_seconds: {type: float}
        #ftheeten rmca 2015 06 01
        latitude_dms_direction: {type: integer}
        #ftheeten rmca 2015 06 01
        longitude_dms_degree: {type: integer}
        #ftheeten rmca 2015 06 01
        longitude_dms_minutes: {type: float}
        #ftheeten rmca 2015 06 01
        longitude_dms_seconds: {type: float}
        #ftheeten rmca 2015 06 01
        longitude_dms_direction: {type: integer}
        #ftheeten rmca 2010 02 05
        latitude_utm: {type: float}
        #ftheeten rmca 2010 02 05
        longitude_utm: {type: float}
        #ftheeten rmca 2010 02 05
        utm_zone: {type: varchar}
        location: {type: string}
        from_date_mask: { type: integer, notnull: true, default:0}
        from_date: { type: string, notnull: true, default: '0001-01-01'}
        to_date_mask: { type: integer, notnull: true, default:0}
        to_date: { type: string, notnull: true, default: '2038-12-31'}
        comments: {type : string}
        properties: {type : string}

#ftheeten 2019 01 07
DoctrineTemporalInformationGtuGroupTags:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        code: {type: string, notnull: true}
        gtu_from_date_mask: { type: integer, notnull: true, default:0}
        gtu_from_date: { type: string, notnull: true, default: '0001-01-01'}
        gtu_to_date_mask: { type: integer, notnull: true, default:0}
        gtu_to_date: { type: string, notnull: true, default: '2038-12-31'}
        latitude: {type: float}
        longitude: {type: float}
        location: {type: string}
        lat_long_accuracy: {type: float}
        elevation: {type: float}
        elevation_accuracy: {type: float}
        #ftheeten 2018 07 26 
        import_ref: {type: integer}
        collector_refs: {type: string}
        expedition_refs: {type: string}
        collection_ref: {type: integer}
        #ftheeten rmca 2015 06 01
        coordinates_source: {type: string}
        #ftheeten rmca 2015 06 01
        latitude_dms_degree: {type: integer}
        #ftheeten rmca 2015 06 01
        latitude_dms_minutes: {type: float}
        #ftheeten rmca 2015 06 01
        latitude_dms_seconds: {type: float}
        #ftheeten rmca 2015 06 01
        latitude_dms_direction: {type: integer}
        #ftheeten rmca 2015 06 01
        longitude_dms_degree: {type: integer}
        #ftheeten rmca 2015 06 01
        longitude_dms_minutes: {type: float}
        #ftheeten rmca 2015 06 01
        longitude_dms_seconds: {type: float}
        #ftheeten rmca 2015 06 01
        longitude_dms_direction: {type: integer}
        #ftheeten rmca 2010 02 05
        latitude_utm: {type: float}
        #ftheeten rmca 2010 02 05
        longitude_utm: {type: float}
        #ftheeten rmca 2010 02 05
        utm_zone: {type: varchar}
        location: {type: string}
        array_from_date_mask : {type : string}
        array_from_date : {type : string}
        array_to_date_mask : {type : string}
        array_to_date : {type : string}
        comments: {type : string}
        properties: {type : string}
        tag : {type : string}
        tag_indexed : {type : string}

#ftheeten 2019 01 07
DoctrineTemporalInformationGtuGroupUnnestTags:
    columns:
        id: { type: integer, primary: true, autoincrement: true }
        code: {type: string, notnull: true}
        gtu_from_date_mask: { type: integer, notnull: true, default:0}
        gtu_from_date: { type: string, notnull: true, default: '0001-01-01'}
        gtu_to_date_mask: { type: integer, notnull: true, default:0}
        gtu_to_date: { type: string, notnull: true, default: '2038-12-31'}
        latitude: {type: float}
        longitude: {type: float}
        location: {type: string}
        lat_long_accuracy: {type: float}
        elevation: {type: float}
        elevation_accuracy: {type: float}
        #ftheeten 2018 07 26 
        import_ref: {type: integer}
        collector_refs: {type: string}
        expedition_refs: {type: string}
        collection_ref: {type: integer}
        #ftheeten rmca 2015 06 01
        coordinates_source: {type: string}
        #ftheeten rmca 2015 06 01
        latitude_dms_degree: {type: integer}
        #ftheeten rmca 2015 06 01
        latitude_dms_minutes: {type: float}
        #ftheeten rmca 2015 06 01
        latitude_dms_seconds: {type: float}
        #ftheeten rmca 2015 06 01
        latitude_dms_direction: {type: integer}
        #ftheeten rmca 2015 06 01
        longitude_dms_degree: {type: integer}
        #ftheeten rmca 2015 06 01
        longitude_dms_minutes: {type: float}
        #ftheeten rmca 2015 06 01
        longitude_dms_seconds: {type: float}
        #ftheeten rmca 2015 06 01
        longitude_dms_direction: {type: integer}
        #ftheeten rmca 2010 02 05
        latitude_utm: {type: float}
        #ftheeten rmca 2010 02 05
        longitude_utm: {type: float}
        #ftheeten rmca 2010 02 05
        utm_zone: {type: varchar}
        location: {type: string}
        from_date_mask: { type: integer, notnull: true, default:0}
        from_date: { type: string, notnull: true, default: '0001-01-01'}
        to_date_mask: { type: integer, notnull: true, default:0}
        to_date: { type: string, notnull: true, default: '2038-12-31'}
        comments: {type : string}
        properties: {type : string}
        tag : {type : string}
        tag_indexed : {type : string}


