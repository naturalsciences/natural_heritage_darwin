<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CataloguePeopleTable extends DarwinTable
{
  /**
  * Find all People linked for a table name and a recordId
  * @param string $table_name the table to look for
  * @param int record_id the record to be commented out.
  * @return Doctrine_Collection Collection of Doctrine records
  */
  public function findForTableByType($table_name, $record_id)
  {
     $q = Doctrine_Query::create()
	 ->from('CataloguePeople c')
	 ->innerJoin('c.People');
     $q = $this->addCatalogueReferences($q, $table_name, $record_id, 'c', true);
     $q->orderBy('c.people_type ASC, order_by ASC, id ASC');
    $items = $q->execute();
    $results = array();
    foreach($items as $item)
    {
      if(! isset($results[$item->getPeopleType()]))
	$results[$item->getPeopleType()] = array();
      $results[$item->getPeopleType()][] = $item;
    }
    return $results;
  }

  /**
  * Get Distincts Sub Type of properties
  * filter by type if one given
  * @param string $type a type
  * @return array an Array of sub-types in keys/values
  */
  public function getDistinctSubType($type=null)
  {
    if($type=="author")
    {
      return CataloguePeople::getAuthorTypes();
    }
    $q = $this->createDistinct('CataloguePeople INDEXBY sub_type', 'people_sub_type', 'sub_type','');
    if(! is_null($type))
      $q->addWhere('people_type = ?',$type);
    $results = $q->fetchArray();
    if(count($results))
      $results = array_combine(array_keys($results),array_keys($results));
    return $results;
  }

  public function changeOrder($table_name, $record_id, $people_type, $order)
  {
      if(! is_array($order))
        throw new Exception ('order must be an array of ids');

      $q = Doctrine_Query::create()
	->update('CataloguePeople c')
	->set('c.order_by',"fct_array_find(?,id::text) ",implode(",",$order));

      $q = $this->addCatalogueReferences($q, $table_name, $record_id, 'c', true);

      $q->andWhere('c.people_type = ?', $people_type)
	->andWhereIn('c.id',$order)
	->execute();
	
  }

  public function getPeopleRelated($table, $type, $rec_id)
  {
    $q = Doctrine_Query::create()->
         from('CataloguePeople')->
         where('referenced_relation = ?', $table)->
         andWhere('record_id = ?', $rec_id)->
         orderBy('order_by ASC');

    if(is_array($type))
      $q->andWhereIn('people_type',$type);
    else
      $q->andWhere('people_type = ?', $type);
    return $q->execute();
  }
  
  public function findActors($rec_id, $type, $table = 'loans')
  {
     $q = Doctrine_Query::create()->
         from('CataloguePeople')->
         andWhere('referenced_relation = ?', $table)->
         andWhere('people_type = ?', $type)->
         andWhere('record_id = ?', $rec_id)->
         orderBy('order_by ASC'); 
     return $q->execute();
  }
}
