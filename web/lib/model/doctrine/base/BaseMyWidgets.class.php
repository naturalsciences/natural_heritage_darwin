<?php

/**
 * BaseMyWidgets
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_ref
 * @property string $category
 * @property string $group_name
 * @property integer $order_by
 * @property integer $col_num
 * @property boolean $mandatory
 * @property boolean $visible
 * @property boolean $is_available
 * @property boolean $opened
 * @property string $color
 * @property integer $icon_ref
 * @property string $title_perso
 * @property string $collections
 * @property boolean $all_public
 * @property Users $User
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method integer   getUserRef()      Returns the current record's "user_ref" value
 * @method string    getCategory()     Returns the current record's "category" value
 * @method string    getGroupName()    Returns the current record's "group_name" value
 * @method integer   getOrderBy()      Returns the current record's "order_by" value
 * @method integer   getColNum()       Returns the current record's "col_num" value
 * @method boolean   getMandatory()    Returns the current record's "mandatory" value
 * @method boolean   getVisible()      Returns the current record's "visible" value
 * @method boolean   getIsAvailable()  Returns the current record's "is_available" value
 * @method boolean   getOpened()       Returns the current record's "opened" value
 * @method string    getColor()        Returns the current record's "color" value
 * @method integer   getIconRef()      Returns the current record's "icon_ref" value
 * @method string    getTitlePerso()   Returns the current record's "title_perso" value
 * @method string    getCollections()  Returns the current record's "collections" value
 * @method boolean   getAllPublic()    Returns the current record's "all_public" value
 * @method Users     getUser()         Returns the current record's "User" value
 * @method MyWidgets setId()           Sets the current record's "id" value
 * @method MyWidgets setUserRef()      Sets the current record's "user_ref" value
 * @method MyWidgets setCategory()     Sets the current record's "category" value
 * @method MyWidgets setGroupName()    Sets the current record's "group_name" value
 * @method MyWidgets setOrderBy()      Sets the current record's "order_by" value
 * @method MyWidgets setColNum()       Sets the current record's "col_num" value
 * @method MyWidgets setMandatory()    Sets the current record's "mandatory" value
 * @method MyWidgets setVisible()      Sets the current record's "visible" value
 * @method MyWidgets setIsAvailable()  Sets the current record's "is_available" value
 * @method MyWidgets setOpened()       Sets the current record's "opened" value
 * @method MyWidgets setColor()        Sets the current record's "color" value
 * @method MyWidgets setIconRef()      Sets the current record's "icon_ref" value
 * @method MyWidgets setTitlePerso()   Sets the current record's "title_perso" value
 * @method MyWidgets setCollections()  Sets the current record's "collections" value
 * @method MyWidgets setAllPublic()    Sets the current record's "all_public" value
 * @method MyWidgets setUser()         Sets the current record's "User" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMyWidgets extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('my_widgets');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('user_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('category', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'board_widget',
             ));
        $this->hasColumn('group_name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('order_by', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('col_num', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('mandatory', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('visible', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('is_available', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('opened', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('color', 'string', null, array(
             'type' => 'string',
             'default' => '#5BAABD',
             ));
        $this->hasColumn('icon_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('title_perso', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('collections', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('all_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users as User', array(
             'local' => 'user_ref',
             'foreign' => 'id'));
    }
}