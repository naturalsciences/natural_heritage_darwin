<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OldMultimedia', 'doctrine');

/**
 * BaseOldMultimedia
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property boolean $is_digital
 * @property string $type
 * @property string $sub_type
 * @property string $title
 * @property string $title_indexed
 * @property string $subject
 * @property coverages $coverage
 * @property string $apercu_path
 * @property string $copyright
 * @property string $license
 * @property string $uri
 * @property string $descriptive_ts
 * @property string $descriptive_language_full_text
 * @property date $creation_date
 * @property integer $creation_date_mask
 * @property date $publication_date_from
 * @property integer $publication_date_from_mask
 * @property date $publication_date_to
 * @property integer $publication_date_to_mask
 * @property integer $parent_ref
 * @property string $path
 * @property string $mime_type
 * 
 * @method integer       getId()                             Returns the current record's "id" value
 * @method boolean       getIsDigital()                      Returns the current record's "is_digital" value
 * @method string        getType()                           Returns the current record's "type" value
 * @method string        getSubType()                        Returns the current record's "sub_type" value
 * @method string        getTitle()                          Returns the current record's "title" value
 * @method string        getTitleIndexed()                   Returns the current record's "title_indexed" value
 * @method string        getSubject()                        Returns the current record's "subject" value
 * @method coverages     getCoverage()                       Returns the current record's "coverage" value
 * @method string        getApercuPath()                     Returns the current record's "apercu_path" value
 * @method string        getCopyright()                      Returns the current record's "copyright" value
 * @method string        getLicense()                        Returns the current record's "license" value
 * @method string        getUri()                            Returns the current record's "uri" value
 * @method string        getDescriptiveTs()                  Returns the current record's "descriptive_ts" value
 * @method string        getDescriptiveLanguageFullText()    Returns the current record's "descriptive_language_full_text" value
 * @method date          getCreationDate()                   Returns the current record's "creation_date" value
 * @method integer       getCreationDateMask()               Returns the current record's "creation_date_mask" value
 * @method date          getPublicationDateFrom()            Returns the current record's "publication_date_from" value
 * @method integer       getPublicationDateFromMask()        Returns the current record's "publication_date_from_mask" value
 * @method date          getPublicationDateTo()              Returns the current record's "publication_date_to" value
 * @method integer       getPublicationDateToMask()          Returns the current record's "publication_date_to_mask" value
 * @method integer       getParentRef()                      Returns the current record's "parent_ref" value
 * @method string        getPath()                           Returns the current record's "path" value
 * @method string        getMimeType()                       Returns the current record's "mime_type" value
 * @method OldMultimedia setId()                             Sets the current record's "id" value
 * @method OldMultimedia setIsDigital()                      Sets the current record's "is_digital" value
 * @method OldMultimedia setType()                           Sets the current record's "type" value
 * @method OldMultimedia setSubType()                        Sets the current record's "sub_type" value
 * @method OldMultimedia setTitle()                          Sets the current record's "title" value
 * @method OldMultimedia setTitleIndexed()                   Sets the current record's "title_indexed" value
 * @method OldMultimedia setSubject()                        Sets the current record's "subject" value
 * @method OldMultimedia setCoverage()                       Sets the current record's "coverage" value
 * @method OldMultimedia setApercuPath()                     Sets the current record's "apercu_path" value
 * @method OldMultimedia setCopyright()                      Sets the current record's "copyright" value
 * @method OldMultimedia setLicense()                        Sets the current record's "license" value
 * @method OldMultimedia setUri()                            Sets the current record's "uri" value
 * @method OldMultimedia setDescriptiveTs()                  Sets the current record's "descriptive_ts" value
 * @method OldMultimedia setDescriptiveLanguageFullText()    Sets the current record's "descriptive_language_full_text" value
 * @method OldMultimedia setCreationDate()                   Sets the current record's "creation_date" value
 * @method OldMultimedia setCreationDateMask()               Sets the current record's "creation_date_mask" value
 * @method OldMultimedia setPublicationDateFrom()            Sets the current record's "publication_date_from" value
 * @method OldMultimedia setPublicationDateFromMask()        Sets the current record's "publication_date_from_mask" value
 * @method OldMultimedia setPublicationDateTo()              Sets the current record's "publication_date_to" value
 * @method OldMultimedia setPublicationDateToMask()          Sets the current record's "publication_date_to_mask" value
 * @method OldMultimedia setParentRef()                      Sets the current record's "parent_ref" value
 * @method OldMultimedia setPath()                           Sets the current record's "path" value
 * @method OldMultimedia setMimeType()                       Sets the current record's "mime_type" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOldMultimedia extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('old_multimedia');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_digital', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => 'true',
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('type', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => 'image',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('sub_type', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('title', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('title_indexed', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('subject', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '/',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('coverage', 'coverages', null, array(
             'type' => 'coverages',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => 'temporal',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('apercu_path', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('copyright', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('license', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('uri', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('descriptive_ts', 'string', null, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('descriptive_language_full_text', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('creation_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0001-01-01',
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('creation_date_mask', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('publication_date_from', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0001-01-01',
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('publication_date_from_mask', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('publication_date_to', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '2038-12-31',
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('publication_date_to_mask', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '0',
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('parent_ref', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('path', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '/',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('mime_type', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}