<?php

/**
 * BaseLoans
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $search_indexed
 * @property string $from_date
 * @property string $to_date
 * @property string $extended_to_date
 * @property Doctrine_Collection $CataloguePeople
 * @property Doctrine_Collection $LoanItems
 * @property Doctrine_Collection $LoanRights
 * @property Doctrine_Collection $LoanStatus
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getName()             Returns the current record's "name" value
 * @method string              getDescription()      Returns the current record's "description" value
 * @method string              getSearchIndexed()    Returns the current record's "search_indexed" value
 * @method string              getFromDate()         Returns the current record's "from_date" value
 * @method string              getToDate()           Returns the current record's "to_date" value
 * @method string              getExtendedToDate()   Returns the current record's "extended_to_date" value
 * @method Doctrine_Collection getCataloguePeople()  Returns the current record's "CataloguePeople" collection
 * @method Doctrine_Collection getLoanItems()        Returns the current record's "LoanItems" collection
 * @method Doctrine_Collection getLoanRights()       Returns the current record's "LoanRights" collection
 * @method Doctrine_Collection getLoanStatus()       Returns the current record's "LoanStatus" collection
 * @method Loans               setId()               Sets the current record's "id" value
 * @method Loans               setName()             Sets the current record's "name" value
 * @method Loans               setDescription()      Sets the current record's "description" value
 * @method Loans               setSearchIndexed()    Sets the current record's "search_indexed" value
 * @method Loans               setFromDate()         Sets the current record's "from_date" value
 * @method Loans               setToDate()           Sets the current record's "to_date" value
 * @method Loans               setExtendedToDate()   Sets the current record's "extended_to_date" value
 * @method Loans               setCataloguePeople()  Sets the current record's "CataloguePeople" collection
 * @method Loans               setLoanItems()        Sets the current record's "LoanItems" collection
 * @method Loans               setLoanRights()       Sets the current record's "LoanRights" collection
 * @method Loans               setLoanStatus()       Sets the current record's "LoanStatus" collection
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLoans extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('loans');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('search_indexed', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('from_date', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('to_date', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('extended_to_date', 'string', null, array(
             'type' => 'string',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('LoanActors as CataloguePeople', array(
             'local' => 'id',
             'foreign' => 'record_id'));

        $this->hasMany('LoanItems', array(
             'local' => 'id',
             'foreign' => 'loan_ref'));

        $this->hasMany('LoanRights', array(
             'local' => 'id',
             'foreign' => 'loan_ref'));

        $this->hasMany('LoanStatus', array(
             'local' => 'id',
             'foreign' => 'loan_ref'));
    }
}