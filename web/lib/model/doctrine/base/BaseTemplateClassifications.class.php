<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TemplateClassifications', 'doctrine');

/**
 * BaseTemplateClassifications
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $name_indexed
 * @property integer $level_ref
 * @property string $status
 * @property boolean $local_naming
 * @property string $color
 * @property string $path
 * @property integer $parent_ref
 * 
 * @method integer                 getId()           Returns the current record's "id" value
 * @method string                  getName()         Returns the current record's "name" value
 * @method string                  getNameIndexed()  Returns the current record's "name_indexed" value
 * @method integer                 getLevelRef()     Returns the current record's "level_ref" value
 * @method string                  getStatus()       Returns the current record's "status" value
 * @method boolean                 getLocalNaming()  Returns the current record's "local_naming" value
 * @method string                  getColor()        Returns the current record's "color" value
 * @method string                  getPath()         Returns the current record's "path" value
 * @method integer                 getParentRef()    Returns the current record's "parent_ref" value
 * @method TemplateClassifications setId()           Sets the current record's "id" value
 * @method TemplateClassifications setName()         Sets the current record's "name" value
 * @method TemplateClassifications setNameIndexed()  Sets the current record's "name_indexed" value
 * @method TemplateClassifications setLevelRef()     Sets the current record's "level_ref" value
 * @method TemplateClassifications setStatus()       Sets the current record's "status" value
 * @method TemplateClassifications setLocalNaming()  Sets the current record's "local_naming" value
 * @method TemplateClassifications setColor()        Sets the current record's "color" value
 * @method TemplateClassifications setPath()         Sets the current record's "path" value
 * @method TemplateClassifications setParentRef()    Sets the current record's "parent_ref" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTemplateClassifications extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('template_classifications');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('name_indexed', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('level_ref', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('status', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => 'valid',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('local_naming', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => 'false',
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('color', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('path', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '/',
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('parent_ref', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}