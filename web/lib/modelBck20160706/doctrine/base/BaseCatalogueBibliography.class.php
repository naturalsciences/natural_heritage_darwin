<?php

/**
 * BaseCatalogueBibliography
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $referenced_relation
 * @property integer $record_id
 * @property integer $bibliography_ref
 * @property Bibliography $Bibliography
 * 
 * @method integer               getId()                  Returns the current record's "id" value
 * @method string                getReferencedRelation()  Returns the current record's "referenced_relation" value
 * @method integer               getRecordId()            Returns the current record's "record_id" value
 * @method integer               getBibliographyRef()     Returns the current record's "bibliography_ref" value
 * @method Bibliography          getBibliography()        Returns the current record's "Bibliography" value
 * @method CatalogueBibliography setId()                  Sets the current record's "id" value
 * @method CatalogueBibliography setReferencedRelation()  Sets the current record's "referenced_relation" value
 * @method CatalogueBibliography setRecordId()            Sets the current record's "record_id" value
 * @method CatalogueBibliography setBibliographyRef()     Sets the current record's "bibliography_ref" value
 * @method CatalogueBibliography setBibliography()        Sets the current record's "Bibliography" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCatalogueBibliography extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('catalogue_bibliography');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('referenced_relation', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('record_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('bibliography_ref', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Bibliography', array(
             'local' => 'bibliography_ref',
             'foreign' => 'id'));
    }
}