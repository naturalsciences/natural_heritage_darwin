<?php

/**
 * BaseStagingRelationship
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $record_id
 * @property string $referenced_relation
 * @property string $relationship_type
 * @property integer $staging_related_ref
 * @property integer $taxon_ref
 * @property integer $mineral_ref
 * @property integer $institution_ref
 * @property string $institution_name
 * @property string $source_name
 * @property string $source_id
 * @property string $unit
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method integer             getRecordId()            Returns the current record's "record_id" value
 * @method string              getReferencedRelation()  Returns the current record's "referenced_relation" value
 * @method string              getRelationshipType()    Returns the current record's "relationship_type" value
 * @method integer             getStagingRelatedRef()   Returns the current record's "staging_related_ref" value
 * @method integer             getTaxonRef()            Returns the current record's "taxon_ref" value
 * @method integer             getMineralRef()          Returns the current record's "mineral_ref" value
 * @method integer             getInstitutionRef()      Returns the current record's "institution_ref" value
 * @method string              getInstitutionName()     Returns the current record's "institution_name" value
 * @method string              getSourceName()          Returns the current record's "source_name" value
 * @method string              getSourceId()            Returns the current record's "source_id" value
 * @method string              getUnitType()            Returns the current record's "unit_type" value
 * @method decimal             getQuantity()            Returns the current record's "quantity" value
 * @method string              getUnit()                Returns the current record's "unit" value
 * @method StagingRelationship setId()                  Sets the current record's "id" value
 * @method StagingRelationship setRecordId()            Sets the current record's "record_id" value
 * @method StagingRelationship setReferencedRelation()  Sets the current record's "referenced_relation" value
 * @method StagingRelationship setRelationshipType()    Sets the current record's "relationship_type" value
 * @method StagingRelationship setStagingRelatedRef()   Sets the current record's "staging_related_ref" value
 * @method StagingRelationship setTaxonRef()            Sets the current record's "taxon_ref" value
 * @method StagingRelationship setMineralRef()          Sets the current record's "mineral_ref" value
 * @method StagingRelationship setInstitutionRef()      Sets the current record's "institution_ref" value
 * @method StagingRelationship setInstitutionName()     Sets the current record's "institution_name" value
 * @method StagingRelationship setSourceName()          Sets the current record's "source_name" value
 * @method StagingRelationship setSourceId()            Sets the current record's "source_id" value
 * @method StagingRelationship setUnitType()            Sets the current record's "unit_type" value
 * @method StagingRelationship setQuantity()            Sets the current record's "quantity" value
 * @method StagingRelationship setUnit()                Sets the current record's "unit" value_type
 * @property decimal $quantity
 * @property string $unit
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method integer             getRecordId()            Returns the current record's "record_id" value
 * @method string              getReferencedRelation()  Returns the current record's "referenced_relation" value
 * @method string              getRelationshipType()    Returns the current record's "relationship_type" value
 * @method integer             getStagingRelatedRef()   Returns the current record's "staging_related_ref" value
 * @method integer             getTaxonRef()            Returns the current record's "taxon_ref" value
 * @method integer             getMineralRef()          Returns the current record's "mineral_ref" value
 * @method integer             getInstitutionRef()      Returns the current record's "institution_ref" value
 * @method string              getInstitutionName()     Returns the current record's "institution_name" value
 * @method string              getSourceName()          Returns the current record's "source_name" value
 * @method string              getSourceId()            Returns the current record's "source_id" value
 * @method string              getUnitType()            Returns the current record's "unit_type" value
 * @method decimal             getQuantity()            Returns the current record's "quantity" value
 * @method string              getUnit()                Returns the current record's "unit" value
 * @method StagingRelationship setId()                  Sets the current record's "id" value
 * @method StagingRelationship setRecordId()            Sets the current record's "record_id" value
 * @method StagingRelationship setReferencedRelation()  Sets the current record's "referenced_relation" value
 * @method StagingRelationship setRelationshipType()    Sets the current record's "relationship_type" value
 * @method StagingRelationship setStagingRelatedRef()   Sets the current record's "staging_related_ref" value
 * @method StagingRelationship setTaxonRef()            Sets the current record's "taxon_ref" value
 * @method StagingRelationship setMineralRef()          Sets the current record's "mineral_ref" value
 * @method StagingRelationship setInstitutionRef()      Sets the current record's "institution_ref" value
 * @method StagingRelationship setInstitutionName()     Sets the current record's "institution_name" value
 * @method StagingRelationship setSourceName()          Sets the current record's "source_name" value
 * @method StagingRelationship setSourceId()            Sets the current record's "source_id" value
 * @method StagingRelationship setUnitType()            Sets the current record's "unit_type" value
 * @method StagingRelationship setQuantity()            Sets the current record's "quantity" value
 * @method StagingRelationship setUnit()                Sets the current record's "unit" value
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStagingRelationship extends DarwinModel
{
    public function setTableDefinition()
    {
        $this->setTableName('staging_relationship');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('record_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('referenced_relation', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('relationship_type', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'host',
             ));
        $this->hasColumn('staging_related_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('taxon_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('mineral_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('institution_ref', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('institution_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('source_name', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('source_id', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('unit_type', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'specimens',
             ));
        $this->hasColumn('quantity', 'decimal', 16, array(
             'type' => 'decimal',
             'length' => 16,
             'scale' => 2,
             ));
        $this->hasColumn('unit', 'string', null, array(
             'type' => 'string',
             'default' => '%',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}